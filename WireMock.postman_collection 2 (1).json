{
	"info": {
		"_postman_id": "03007d17-55d7-4fa0-9511-aab9bfec50f5",
		"name": "WireMock",
		"description": "WireMock offers a REST API for administration, troubleshooting and analysis purposes",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "2219612"
	},
	"item": [
		{
			"name": "__admin",
			"item": [
				{
					"name": "mappings",
					"item": [
						{
							"name": "reset",
							"item": [
								{
									"name": "Reset stub mappings",
									"request": {
										"method": "POST",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/__admin/mappings/reset",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"__admin",
												"mappings",
												"reset"
											]
										},
										"description": "Restores stub mappings to the defaults defined back in the backing store"
									},
									"response": [
										{
											"name": "Successfully reset",
											"originalRequest": {
												"method": "POST",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/__admin/mappings/reset",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"__admin",
														"mappings",
														"reset"
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "text",
											"header": [],
											"cookie": [],
											"body": ""
										}
									]
								}
							]
						},
						{
							"name": "save",
							"item": [
								{
									"name": "Persist stub mappings",
									"request": {
										"method": "POST",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/__admin/mappings/save",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"__admin",
												"mappings",
												"save"
											]
										},
										"description": "Save all persistent stub mappings to the backing store"
									},
									"response": [
										{
											"name": "Successfully saved",
											"originalRequest": {
												"method": "POST",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/__admin/mappings/save",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"__admin",
														"mappings",
														"save"
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "text",
											"header": [],
											"cookie": [],
											"body": ""
										}
									]
								}
							]
						},
						{
							"name": "import",
							"item": [
								{
									"name": "Import stub mappings",
									"request": {
										"method": "POST",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/__admin/mappings/import",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"__admin",
												"mappings",
												"import"
											]
										},
										"description": "Import given stub mappings to the backing store"
									},
									"response": [
										{
											"name": "Successfully imported",
											"originalRequest": {
												"method": "POST",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/__admin/mappings/import",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"__admin",
														"mappings",
														"import"
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "text",
											"header": [],
											"cookie": [],
											"body": ""
										}
									]
								}
							]
						},
						{
							"name": "{stubMappingId}",
							"item": [
								{
									"name": "Get stub mapping by ID",
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/__admin/mappings/:stubMappingId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"__admin",
												"mappings",
												":stubMappingId"
											],
											"variable": [
												{
													"key": "stubMappingId",
													"value": "<string>",
													"description": "(Required) The UUID of stub mapping"
												}
											]
										}
									},
									"response": [
										{
											"name": "The stub mapping",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/__admin/mappings/:stubMappingId",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"__admin",
														"mappings",
														":stubMappingId"
													],
													"variable": [
														{
															"key": "stubMappingId"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"id\": \"<string>\",\n  \"uuid\": \"<string>\",\n  \"name\": \"<string>\",\n  \"request\": {\n    \"scheme\": \"https\",\n    \"host\": \"<string>\",\n    \"port\": \"<integer>\",\n    \"method\": \"JBBCOYBLH\",\n    \"url\": \"<string>\",\n    \"urlPath\": \"<string>\",\n    \"urlPathPattern\": \"<string>\",\n    \"urlPattern\": \"<string>\",\n    \"pathParameters\": {\n      \"culpa10b\": {\n        \"equalTo\": \"<string>\",\n        \"caseInsensitive\": \"<boolean>\"\n      }\n    },\n    \"queryParameters\": {\n      \"proident_f\": {\n        \"equalTo\": \"<string>\",\n        \"caseInsensitive\": \"<boolean>\"\n      },\n      \"consectetur_079\": {\n        \"equalTo\": \"<string>\",\n        \"caseInsensitive\": \"<boolean>\"\n      },\n      \"labore_94\": {\n        \"equalTo\": \"<string>\",\n        \"caseInsensitive\": \"<boolean>\"\n      }\n    },\n    \"formParameters\": {\n      \"utb0f\": {\n        \"equalTo\": \"<string>\",\n        \"caseInsensitive\": \"<boolean>\"\n      }\n    },\n    \"headers\": {\n      \"dolor_\": {\n        \"equalTo\": \"<string>\",\n        \"caseInsensitive\": \"<boolean>\"\n      }\n    },\n    \"basicAuthCredentials\": {\n      \"username\": \"<string>\",\n      \"password\": \"<string>\"\n    },\n    \"cookies\": {\n      \"animcf\": {\n        \"equalTo\": \"<string>\",\n        \"caseInsensitive\": \"<boolean>\"\n      },\n      \"ipsum79\": {\n        \"equalTo\": \"<string>\",\n        \"caseInsensitive\": \"<boolean>\"\n      },\n      \"Duis_3\": {\n        \"equalTo\": \"<string>\",\n        \"caseInsensitive\": \"<boolean>\"\n      }\n    },\n    \"bodyPatterns\": [\n      {\n        \"equalTo\": \"<string>\",\n        \"caseInsensitive\": \"<boolean>\"\n      },\n      {\n        \"equalTo\": \"<string>\",\n        \"caseInsensitive\": \"<boolean>\"\n      }\n    ],\n    \"customMatcher\": {\n      \"name\": \"<string>\",\n      \"parameters\": {}\n    },\n    \"multipartPatterns\": [\n      {\n        \"name\": \"<string>\",\n        \"matchingType\": \"ANY\",\n        \"headers\": {\n          \"deserunt_9\": {\n            \"equalTo\": \"<string>\",\n            \"caseInsensitive\": \"<boolean>\"\n          },\n          \"eu_9\": {\n            \"equalTo\": \"<string>\",\n            \"caseInsensitive\": \"<boolean>\"\n          },\n          \"cupidatatd\": {\n            \"equalTo\": \"<string>\",\n            \"caseInsensitive\": \"<boolean>\"\n          }\n        },\n        \"bodyPatterns\": [\n          {\n            \"equalTo\": \"<string>\",\n            \"caseInsensitive\": \"<boolean>\"\n          },\n          {\n            \"equalTo\": \"<string>\",\n            \"caseInsensitive\": \"<boolean>\"\n          }\n        ]\n      },\n      {\n        \"name\": \"<string>\",\n        \"matchingType\": \"ANY\",\n        \"headers\": {\n          \"Duis_d\": {\n            \"equalTo\": \"<string>\",\n            \"caseInsensitive\": \"<boolean>\"\n          },\n          \"consequat_b\": {\n            \"equalTo\": \"<string>\",\n            \"caseInsensitive\": \"<boolean>\"\n          }\n        },\n        \"bodyPatterns\": [\n          {\n            \"equalTo\": \"<string>\",\n            \"caseInsensitive\": \"<boolean>\"\n          },\n          {\n            \"equalTo\": \"<string>\",\n            \"caseInsensitive\": \"<boolean>\"\n          }\n        ]\n      }\n    ]\n  },\n  \"response\": {\n    \"status\": \"<integer>\",\n    \"statusMessage\": \"<string>\",\n    \"headers\": {\n      \"commodo_0\": \"<string>\",\n      \"magna9\": \"<string>\",\n      \"ipsume\": \"<string>\",\n      \"ut_ac\": \"<string>\"\n    },\n    \"additionalProxyRequestHeaders\": {\n      \"nisi11\": \"<string>\",\n      \"aute_a5\": \"<string>\",\n      \"quis_b\": \"<string>\"\n    },\n    \"removeProxyRequestHeaders\": [\n      \"<string>\",\n      \"<string>\"\n    ],\n    \"body\": \"<string>\",\n    \"base64Body\": \"f9KQ+F5/X1Yp6n/cSYQ7ZsoEF5CziyfNra3v\",\n    \"jsonBody\": {},\n    \"bodyFileName\": \"<string>\",\n    \"fault\": \"CONNECTION_RESET_BY_PEER\",\n    \"fixedDelayMilliseconds\": \"<integer>\",\n    \"delayDistribution\": {\n      \"median\": \"<integer>\",\n      \"sigma\": \"<number>\",\n      \"type\": \"lognormal\"\n    },\n    \"chunkedDribbleDelay\": {\n      \"numberOfChunks\": \"<integer>\",\n      \"totalDuration\": \"<integer>\"\n    },\n    \"fromConfiguredStub\": \"<boolean>\",\n    \"proxyBaseUrl\": \"<string>\",\n    \"proxyUrlPrefixToRemove\": \"<string>\",\n    \"transformerParameters\": {},\n    \"transformers\": [\n      \"<string>\",\n      \"<string>\"\n    ]\n  },\n  \"persistent\": \"<boolean>\",\n  \"priority\": \"<integer>\",\n  \"scenarioName\": \"<string>\",\n  \"requiredScenarioState\": \"<string>\",\n  \"newScenarioState\": \"<string>\",\n  \"postServeActions\": {},\n  \"serveEventListeners\": [\n    {\n      \"name\": \"<string>\",\n      \"requestPhases\": [\n        \"BEFORE_RESPONSE_SENT\",\n        \"AFTER_COMPLETE\"\n      ],\n      \"parameters\": {}\n    },\n    {\n      \"name\": \"<string>\",\n      \"requestPhases\": [\n        \"BEFORE_MATCH\",\n        \"AFTER_COMPLETE\"\n      ],\n      \"parameters\": {}\n    }\n  ],\n  \"metadata\": {}\n}"
										},
										{
											"name": "Stub mapping not found",
											"originalRequest": {
												"method": "GET",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/__admin/mappings/:stubMappingId",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"__admin",
														"mappings",
														":stubMappingId"
													],
													"variable": [
														{
															"key": "stubMappingId"
														}
													]
												}
											},
											"status": "Not Found",
											"code": 404,
											"_postman_previewlanguage": "text",
											"header": [],
											"cookie": [],
											"body": ""
										}
									]
								},
								{
									"name": "Update a stub mapping",
									"request": {
										"method": "PUT",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"id\": \"<string>\",\n  \"uuid\": \"<string>\",\n  \"name\": \"<string>\",\n  \"request\": {\n    \"scheme\": \"https\",\n    \"host\": \"<string>\",\n    \"port\": \"<integer>\",\n    \"method\": \"JBBCOYBLH\",\n    \"url\": \"<string>\",\n    \"urlPath\": \"<string>\",\n    \"urlPathPattern\": \"<string>\",\n    \"urlPattern\": \"<string>\",\n    \"pathParameters\": {\n      \"culpa10b\": {\n        \"equalTo\": \"<string>\",\n        \"caseInsensitive\": \"<boolean>\"\n      }\n    },\n    \"queryParameters\": {\n      \"proident_f\": {\n        \"equalTo\": \"<string>\",\n        \"caseInsensitive\": \"<boolean>\"\n      },\n      \"consectetur_079\": {\n        \"equalTo\": \"<string>\",\n        \"caseInsensitive\": \"<boolean>\"\n      },\n      \"labore_94\": {\n        \"equalTo\": \"<string>\",\n        \"caseInsensitive\": \"<boolean>\"\n      }\n    },\n    \"formParameters\": {\n      \"utb0f\": {\n        \"equalTo\": \"<string>\",\n        \"caseInsensitive\": \"<boolean>\"\n      }\n    },\n    \"headers\": {\n      \"dolor_\": {\n        \"equalTo\": \"<string>\",\n        \"caseInsensitive\": \"<boolean>\"\n      }\n    },\n    \"basicAuthCredentials\": {\n      \"username\": \"<string>\",\n      \"password\": \"<string>\"\n    },\n    \"cookies\": {\n      \"animcf\": {\n        \"equalTo\": \"<string>\",\n        \"caseInsensitive\": \"<boolean>\"\n      },\n      \"ipsum79\": {\n        \"equalTo\": \"<string>\",\n        \"caseInsensitive\": \"<boolean>\"\n      },\n      \"Duis_3\": {\n        \"equalTo\": \"<string>\",\n        \"caseInsensitive\": \"<boolean>\"\n      }\n    },\n    \"bodyPatterns\": [\n      {\n        \"equalTo\": \"<string>\",\n        \"caseInsensitive\": \"<boolean>\"\n      },\n      {\n        \"equalTo\": \"<string>\",\n        \"caseInsensitive\": \"<boolean>\"\n      }\n    ],\n    \"customMatcher\": {\n      \"name\": \"<string>\",\n      \"parameters\": {}\n    },\n    \"multipartPatterns\": [\n      {\n        \"name\": \"<string>\",\n        \"matchingType\": \"ANY\",\n        \"headers\": {\n          \"deserunt_9\": {\n            \"equalTo\": \"<string>\",\n            \"caseInsensitive\": \"<boolean>\"\n          },\n          \"eu_9\": {\n            \"equalTo\": \"<string>\",\n            \"caseInsensitive\": \"<boolean>\"\n          },\n          \"cupidatatd\": {\n            \"equalTo\": \"<string>\",\n            \"caseInsensitive\": \"<boolean>\"\n          }\n        },\n        \"bodyPatterns\": [\n          {\n            \"equalTo\": \"<string>\",\n            \"caseInsensitive\": \"<boolean>\"\n          },\n          {\n            \"equalTo\": \"<string>\",\n            \"caseInsensitive\": \"<boolean>\"\n          }\n        ]\n      },\n      {\n        \"name\": \"<string>\",\n        \"matchingType\": \"ANY\",\n        \"headers\": {\n          \"Duis_d\": {\n            \"equalTo\": \"<string>\",\n            \"caseInsensitive\": \"<boolean>\"\n          },\n          \"consequat_b\": {\n            \"equalTo\": \"<string>\",\n            \"caseInsensitive\": \"<boolean>\"\n          }\n        },\n        \"bodyPatterns\": [\n          {\n            \"equalTo\": \"<string>\",\n            \"caseInsensitive\": \"<boolean>\"\n          },\n          {\n            \"equalTo\": \"<string>\",\n            \"caseInsensitive\": \"<boolean>\"\n          }\n        ]\n      }\n    ]\n  },\n  \"response\": {\n    \"status\": \"<integer>\",\n    \"statusMessage\": \"<string>\",\n    \"headers\": {\n      \"commodo_0\": \"<string>\",\n      \"magna9\": \"<string>\",\n      \"ipsume\": \"<string>\",\n      \"ut_ac\": \"<string>\"\n    },\n    \"additionalProxyRequestHeaders\": {\n      \"nisi11\": \"<string>\",\n      \"aute_a5\": \"<string>\",\n      \"quis_b\": \"<string>\"\n    },\n    \"removeProxyRequestHeaders\": [\n      \"<string>\",\n      \"<string>\"\n    ],\n    \"body\": \"<string>\",\n    \"base64Body\": \"f9KQ+F5/X1Yp6n/cSYQ7ZsoEF5CziyfNra3v\",\n    \"jsonBody\": {},\n    \"bodyFileName\": \"<string>\",\n    \"fault\": \"CONNECTION_RESET_BY_PEER\",\n    \"fixedDelayMilliseconds\": \"<integer>\",\n    \"delayDistribution\": {\n      \"median\": \"<integer>\",\n      \"sigma\": \"<number>\",\n      \"type\": \"lognormal\"\n    },\n    \"chunkedDribbleDelay\": {\n      \"numberOfChunks\": \"<integer>\",\n      \"totalDuration\": \"<integer>\"\n    },\n    \"fromConfiguredStub\": \"<boolean>\",\n    \"proxyBaseUrl\": \"<string>\",\n    \"proxyUrlPrefixToRemove\": \"<string>\",\n    \"transformerParameters\": {},\n    \"transformers\": [\n      \"<string>\",\n      \"<string>\"\n    ]\n  },\n  \"persistent\": \"<boolean>\",\n  \"priority\": \"<integer>\",\n  \"scenarioName\": \"<string>\",\n  \"requiredScenarioState\": \"<string>\",\n  \"newScenarioState\": \"<string>\",\n  \"postServeActions\": {},\n  \"serveEventListeners\": [\n    {\n      \"name\": \"<string>\",\n      \"requestPhases\": [\n        \"BEFORE_RESPONSE_SENT\",\n        \"AFTER_COMPLETE\"\n      ],\n      \"parameters\": {}\n    },\n    {\n      \"name\": \"<string>\",\n      \"requestPhases\": [\n        \"BEFORE_MATCH\",\n        \"AFTER_COMPLETE\"\n      ],\n      \"parameters\": {}\n    }\n  ],\n  \"metadata\": {}\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/__admin/mappings/:stubMappingId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"__admin",
												"mappings",
												":stubMappingId"
											],
											"variable": [
												{
													"key": "stubMappingId",
													"value": "<string>",
													"description": "(Required) The UUID of stub mapping"
												}
											]
										}
									},
									"response": [
										{
											"name": "The stub mapping",
											"originalRequest": {
												"method": "PUT",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"id\": \"<string>\",\n  \"uuid\": \"<string>\",\n  \"name\": \"<string>\",\n  \"request\": {\n    \"scheme\": \"https\",\n    \"host\": \"<string>\",\n    \"port\": \"<integer>\",\n    \"method\": \"JBBCOYBLH\",\n    \"url\": \"<string>\",\n    \"urlPath\": \"<string>\",\n    \"urlPathPattern\": \"<string>\",\n    \"urlPattern\": \"<string>\",\n    \"pathParameters\": {\n      \"culpa10b\": {\n        \"equalTo\": \"<string>\",\n        \"caseInsensitive\": \"<boolean>\"\n      }\n    },\n    \"queryParameters\": {\n      \"proident_f\": {\n        \"equalTo\": \"<string>\",\n        \"caseInsensitive\": \"<boolean>\"\n      },\n      \"consectetur_079\": {\n        \"equalTo\": \"<string>\",\n        \"caseInsensitive\": \"<boolean>\"\n      },\n      \"labore_94\": {\n        \"equalTo\": \"<string>\",\n        \"caseInsensitive\": \"<boolean>\"\n      }\n    },\n    \"formParameters\": {\n      \"utb0f\": {\n        \"equalTo\": \"<string>\",\n        \"caseInsensitive\": \"<boolean>\"\n      }\n    },\n    \"headers\": {\n      \"dolor_\": {\n        \"equalTo\": \"<string>\",\n        \"caseInsensitive\": \"<boolean>\"\n      }\n    },\n    \"basicAuthCredentials\": {\n      \"username\": \"<string>\",\n      \"password\": \"<string>\"\n    },\n    \"cookies\": {\n      \"animcf\": {\n        \"equalTo\": \"<string>\",\n        \"caseInsensitive\": \"<boolean>\"\n      },\n      \"ipsum79\": {\n        \"equalTo\": \"<string>\",\n        \"caseInsensitive\": \"<boolean>\"\n      },\n      \"Duis_3\": {\n        \"equalTo\": \"<string>\",\n        \"caseInsensitive\": \"<boolean>\"\n      }\n    },\n    \"bodyPatterns\": [\n      {\n        \"equalTo\": \"<string>\",\n        \"caseInsensitive\": \"<boolean>\"\n      },\n      {\n        \"equalTo\": \"<string>\",\n        \"caseInsensitive\": \"<boolean>\"\n      }\n    ],\n    \"customMatcher\": {\n      \"name\": \"<string>\",\n      \"parameters\": {}\n    },\n    \"multipartPatterns\": [\n      {\n        \"name\": \"<string>\",\n        \"matchingType\": \"ANY\",\n        \"headers\": {\n          \"deserunt_9\": {\n            \"equalTo\": \"<string>\",\n            \"caseInsensitive\": \"<boolean>\"\n          },\n          \"eu_9\": {\n            \"equalTo\": \"<string>\",\n            \"caseInsensitive\": \"<boolean>\"\n          },\n          \"cupidatatd\": {\n            \"equalTo\": \"<string>\",\n            \"caseInsensitive\": \"<boolean>\"\n          }\n        },\n        \"bodyPatterns\": [\n          {\n            \"equalTo\": \"<string>\",\n            \"caseInsensitive\": \"<boolean>\"\n          },\n          {\n            \"equalTo\": \"<string>\",\n            \"caseInsensitive\": \"<boolean>\"\n          }\n        ]\n      },\n      {\n        \"name\": \"<string>\",\n        \"matchingType\": \"ANY\",\n        \"headers\": {\n          \"Duis_d\": {\n            \"equalTo\": \"<string>\",\n            \"caseInsensitive\": \"<boolean>\"\n          },\n          \"consequat_b\": {\n            \"equalTo\": \"<string>\",\n            \"caseInsensitive\": \"<boolean>\"\n          }\n        },\n        \"bodyPatterns\": [\n          {\n            \"equalTo\": \"<string>\",\n            \"caseInsensitive\": \"<boolean>\"\n          },\n          {\n            \"equalTo\": \"<string>\",\n            \"caseInsensitive\": \"<boolean>\"\n          }\n        ]\n      }\n    ]\n  },\n  \"response\": {\n    \"status\": \"<integer>\",\n    \"statusMessage\": \"<string>\",\n    \"headers\": {\n      \"commodo_0\": \"<string>\",\n      \"magna9\": \"<string>\",\n      \"ipsume\": \"<string>\",\n      \"ut_ac\": \"<string>\"\n    },\n    \"additionalProxyRequestHeaders\": {\n      \"nisi11\": \"<string>\",\n      \"aute_a5\": \"<string>\",\n      \"quis_b\": \"<string>\"\n    },\n    \"removeProxyRequestHeaders\": [\n      \"<string>\",\n      \"<string>\"\n    ],\n    \"body\": \"<string>\",\n    \"base64Body\": \"f9KQ+F5/X1Yp6n/cSYQ7ZsoEF5CziyfNra3v\",\n    \"jsonBody\": {},\n    \"bodyFileName\": \"<string>\",\n    \"fault\": \"CONNECTION_RESET_BY_PEER\",\n    \"fixedDelayMilliseconds\": \"<integer>\",\n    \"delayDistribution\": {\n      \"median\": \"<integer>\",\n      \"sigma\": \"<number>\",\n      \"type\": \"lognormal\"\n    },\n    \"chunkedDribbleDelay\": {\n      \"numberOfChunks\": \"<integer>\",\n      \"totalDuration\": \"<integer>\"\n    },\n    \"fromConfiguredStub\": \"<boolean>\",\n    \"proxyBaseUrl\": \"<string>\",\n    \"proxyUrlPrefixToRemove\": \"<string>\",\n    \"transformerParameters\": {},\n    \"transformers\": [\n      \"<string>\",\n      \"<string>\"\n    ]\n  },\n  \"persistent\": \"<boolean>\",\n  \"priority\": \"<integer>\",\n  \"scenarioName\": \"<string>\",\n  \"requiredScenarioState\": \"<string>\",\n  \"newScenarioState\": \"<string>\",\n  \"postServeActions\": {},\n  \"serveEventListeners\": [\n    {\n      \"name\": \"<string>\",\n      \"requestPhases\": [\n        \"BEFORE_RESPONSE_SENT\",\n        \"AFTER_COMPLETE\"\n      ],\n      \"parameters\": {}\n    },\n    {\n      \"name\": \"<string>\",\n      \"requestPhases\": [\n        \"BEFORE_MATCH\",\n        \"AFTER_COMPLETE\"\n      ],\n      \"parameters\": {}\n    }\n  ],\n  \"metadata\": {}\n}",
													"options": {
														"raw": {
															"headerFamily": "json",
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/__admin/mappings/:stubMappingId",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"__admin",
														"mappings",
														":stubMappingId"
													],
													"variable": [
														{
															"key": "stubMappingId"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"id\": \"<string>\",\n  \"uuid\": \"<string>\",\n  \"name\": \"<string>\",\n  \"request\": {\n    \"scheme\": \"https\",\n    \"host\": \"<string>\",\n    \"port\": \"<integer>\",\n    \"method\": \"JBBCOYBLH\",\n    \"url\": \"<string>\",\n    \"urlPath\": \"<string>\",\n    \"urlPathPattern\": \"<string>\",\n    \"urlPattern\": \"<string>\",\n    \"pathParameters\": {\n      \"culpa10b\": {\n        \"equalTo\": \"<string>\",\n        \"caseInsensitive\": \"<boolean>\"\n      }\n    },\n    \"queryParameters\": {\n      \"proident_f\": {\n        \"equalTo\": \"<string>\",\n        \"caseInsensitive\": \"<boolean>\"\n      },\n      \"consectetur_079\": {\n        \"equalTo\": \"<string>\",\n        \"caseInsensitive\": \"<boolean>\"\n      },\n      \"labore_94\": {\n        \"equalTo\": \"<string>\",\n        \"caseInsensitive\": \"<boolean>\"\n      }\n    },\n    \"formParameters\": {\n      \"utb0f\": {\n        \"equalTo\": \"<string>\",\n        \"caseInsensitive\": \"<boolean>\"\n      }\n    },\n    \"headers\": {\n      \"dolor_\": {\n        \"equalTo\": \"<string>\",\n        \"caseInsensitive\": \"<boolean>\"\n      }\n    },\n    \"basicAuthCredentials\": {\n      \"username\": \"<string>\",\n      \"password\": \"<string>\"\n    },\n    \"cookies\": {\n      \"animcf\": {\n        \"equalTo\": \"<string>\",\n        \"caseInsensitive\": \"<boolean>\"\n      },\n      \"ipsum79\": {\n        \"equalTo\": \"<string>\",\n        \"caseInsensitive\": \"<boolean>\"\n      },\n      \"Duis_3\": {\n        \"equalTo\": \"<string>\",\n        \"caseInsensitive\": \"<boolean>\"\n      }\n    },\n    \"bodyPatterns\": [\n      {\n        \"equalTo\": \"<string>\",\n        \"caseInsensitive\": \"<boolean>\"\n      },\n      {\n        \"equalTo\": \"<string>\",\n        \"caseInsensitive\": \"<boolean>\"\n      }\n    ],\n    \"customMatcher\": {\n      \"name\": \"<string>\",\n      \"parameters\": {}\n    },\n    \"multipartPatterns\": [\n      {\n        \"name\": \"<string>\",\n        \"matchingType\": \"ANY\",\n        \"headers\": {\n          \"deserunt_9\": {\n            \"equalTo\": \"<string>\",\n            \"caseInsensitive\": \"<boolean>\"\n          },\n          \"eu_9\": {\n            \"equalTo\": \"<string>\",\n            \"caseInsensitive\": \"<boolean>\"\n          },\n          \"cupidatatd\": {\n            \"equalTo\": \"<string>\",\n            \"caseInsensitive\": \"<boolean>\"\n          }\n        },\n        \"bodyPatterns\": [\n          {\n            \"equalTo\": \"<string>\",\n            \"caseInsensitive\": \"<boolean>\"\n          },\n          {\n            \"equalTo\": \"<string>\",\n            \"caseInsensitive\": \"<boolean>\"\n          }\n        ]\n      },\n      {\n        \"name\": \"<string>\",\n        \"matchingType\": \"ANY\",\n        \"headers\": {\n          \"Duis_d\": {\n            \"equalTo\": \"<string>\",\n            \"caseInsensitive\": \"<boolean>\"\n          },\n          \"consequat_b\": {\n            \"equalTo\": \"<string>\",\n            \"caseInsensitive\": \"<boolean>\"\n          }\n        },\n        \"bodyPatterns\": [\n          {\n            \"equalTo\": \"<string>\",\n            \"caseInsensitive\": \"<boolean>\"\n          },\n          {\n            \"equalTo\": \"<string>\",\n            \"caseInsensitive\": \"<boolean>\"\n          }\n        ]\n      }\n    ]\n  },\n  \"response\": {\n    \"status\": \"<integer>\",\n    \"statusMessage\": \"<string>\",\n    \"headers\": {\n      \"commodo_0\": \"<string>\",\n      \"magna9\": \"<string>\",\n      \"ipsume\": \"<string>\",\n      \"ut_ac\": \"<string>\"\n    },\n    \"additionalProxyRequestHeaders\": {\n      \"nisi11\": \"<string>\",\n      \"aute_a5\": \"<string>\",\n      \"quis_b\": \"<string>\"\n    },\n    \"removeProxyRequestHeaders\": [\n      \"<string>\",\n      \"<string>\"\n    ],\n    \"body\": \"<string>\",\n    \"base64Body\": \"f9KQ+F5/X1Yp6n/cSYQ7ZsoEF5CziyfNra3v\",\n    \"jsonBody\": {},\n    \"bodyFileName\": \"<string>\",\n    \"fault\": \"CONNECTION_RESET_BY_PEER\",\n    \"fixedDelayMilliseconds\": \"<integer>\",\n    \"delayDistribution\": {\n      \"median\": \"<integer>\",\n      \"sigma\": \"<number>\",\n      \"type\": \"lognormal\"\n    },\n    \"chunkedDribbleDelay\": {\n      \"numberOfChunks\": \"<integer>\",\n      \"totalDuration\": \"<integer>\"\n    },\n    \"fromConfiguredStub\": \"<boolean>\",\n    \"proxyBaseUrl\": \"<string>\",\n    \"proxyUrlPrefixToRemove\": \"<string>\",\n    \"transformerParameters\": {},\n    \"transformers\": [\n      \"<string>\",\n      \"<string>\"\n    ]\n  },\n  \"persistent\": \"<boolean>\",\n  \"priority\": \"<integer>\",\n  \"scenarioName\": \"<string>\",\n  \"requiredScenarioState\": \"<string>\",\n  \"newScenarioState\": \"<string>\",\n  \"postServeActions\": {},\n  \"serveEventListeners\": [\n    {\n      \"name\": \"<string>\",\n      \"requestPhases\": [\n        \"BEFORE_RESPONSE_SENT\",\n        \"AFTER_COMPLETE\"\n      ],\n      \"parameters\": {}\n    },\n    {\n      \"name\": \"<string>\",\n      \"requestPhases\": [\n        \"BEFORE_MATCH\",\n        \"AFTER_COMPLETE\"\n      ],\n      \"parameters\": {}\n    }\n  ],\n  \"metadata\": {}\n}"
										},
										{
											"name": "Stub mapping not found",
											"originalRequest": {
												"method": "PUT",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"id\": \"<string>\",\n  \"uuid\": \"<string>\",\n  \"name\": \"<string>\",\n  \"request\": {\n    \"scheme\": \"https\",\n    \"host\": \"<string>\",\n    \"port\": \"<integer>\",\n    \"method\": \"JBBCOYBLH\",\n    \"url\": \"<string>\",\n    \"urlPath\": \"<string>\",\n    \"urlPathPattern\": \"<string>\",\n    \"urlPattern\": \"<string>\",\n    \"pathParameters\": {\n      \"culpa10b\": {\n        \"equalTo\": \"<string>\",\n        \"caseInsensitive\": \"<boolean>\"\n      }\n    },\n    \"queryParameters\": {\n      \"proident_f\": {\n        \"equalTo\": \"<string>\",\n        \"caseInsensitive\": \"<boolean>\"\n      },\n      \"consectetur_079\": {\n        \"equalTo\": \"<string>\",\n        \"caseInsensitive\": \"<boolean>\"\n      },\n      \"labore_94\": {\n        \"equalTo\": \"<string>\",\n        \"caseInsensitive\": \"<boolean>\"\n      }\n    },\n    \"formParameters\": {\n      \"utb0f\": {\n        \"equalTo\": \"<string>\",\n        \"caseInsensitive\": \"<boolean>\"\n      }\n    },\n    \"headers\": {\n      \"dolor_\": {\n        \"equalTo\": \"<string>\",\n        \"caseInsensitive\": \"<boolean>\"\n      }\n    },\n    \"basicAuthCredentials\": {\n      \"username\": \"<string>\",\n      \"password\": \"<string>\"\n    },\n    \"cookies\": {\n      \"animcf\": {\n        \"equalTo\": \"<string>\",\n        \"caseInsensitive\": \"<boolean>\"\n      },\n      \"ipsum79\": {\n        \"equalTo\": \"<string>\",\n        \"caseInsensitive\": \"<boolean>\"\n      },\n      \"Duis_3\": {\n        \"equalTo\": \"<string>\",\n        \"caseInsensitive\": \"<boolean>\"\n      }\n    },\n    \"bodyPatterns\": [\n      {\n        \"equalTo\": \"<string>\",\n        \"caseInsensitive\": \"<boolean>\"\n      },\n      {\n        \"equalTo\": \"<string>\",\n        \"caseInsensitive\": \"<boolean>\"\n      }\n    ],\n    \"customMatcher\": {\n      \"name\": \"<string>\",\n      \"parameters\": {}\n    },\n    \"multipartPatterns\": [\n      {\n        \"name\": \"<string>\",\n        \"matchingType\": \"ANY\",\n        \"headers\": {\n          \"deserunt_9\": {\n            \"equalTo\": \"<string>\",\n            \"caseInsensitive\": \"<boolean>\"\n          },\n          \"eu_9\": {\n            \"equalTo\": \"<string>\",\n            \"caseInsensitive\": \"<boolean>\"\n          },\n          \"cupidatatd\": {\n            \"equalTo\": \"<string>\",\n            \"caseInsensitive\": \"<boolean>\"\n          }\n        },\n        \"bodyPatterns\": [\n          {\n            \"equalTo\": \"<string>\",\n            \"caseInsensitive\": \"<boolean>\"\n          },\n          {\n            \"equalTo\": \"<string>\",\n            \"caseInsensitive\": \"<boolean>\"\n          }\n        ]\n      },\n      {\n        \"name\": \"<string>\",\n        \"matchingType\": \"ANY\",\n        \"headers\": {\n          \"Duis_d\": {\n            \"equalTo\": \"<string>\",\n            \"caseInsensitive\": \"<boolean>\"\n          },\n          \"consequat_b\": {\n            \"equalTo\": \"<string>\",\n            \"caseInsensitive\": \"<boolean>\"\n          }\n        },\n        \"bodyPatterns\": [\n          {\n            \"equalTo\": \"<string>\",\n            \"caseInsensitive\": \"<boolean>\"\n          },\n          {\n            \"equalTo\": \"<string>\",\n            \"caseInsensitive\": \"<boolean>\"\n          }\n        ]\n      }\n    ]\n  },\n  \"response\": {\n    \"status\": \"<integer>\",\n    \"statusMessage\": \"<string>\",\n    \"headers\": {\n      \"commodo_0\": \"<string>\",\n      \"magna9\": \"<string>\",\n      \"ipsume\": \"<string>\",\n      \"ut_ac\": \"<string>\"\n    },\n    \"additionalProxyRequestHeaders\": {\n      \"nisi11\": \"<string>\",\n      \"aute_a5\": \"<string>\",\n      \"quis_b\": \"<string>\"\n    },\n    \"removeProxyRequestHeaders\": [\n      \"<string>\",\n      \"<string>\"\n    ],\n    \"body\": \"<string>\",\n    \"base64Body\": \"f9KQ+F5/X1Yp6n/cSYQ7ZsoEF5CziyfNra3v\",\n    \"jsonBody\": {},\n    \"bodyFileName\": \"<string>\",\n    \"fault\": \"CONNECTION_RESET_BY_PEER\",\n    \"fixedDelayMilliseconds\": \"<integer>\",\n    \"delayDistribution\": {\n      \"median\": \"<integer>\",\n      \"sigma\": \"<number>\",\n      \"type\": \"lognormal\"\n    },\n    \"chunkedDribbleDelay\": {\n      \"numberOfChunks\": \"<integer>\",\n      \"totalDuration\": \"<integer>\"\n    },\n    \"fromConfiguredStub\": \"<boolean>\",\n    \"proxyBaseUrl\": \"<string>\",\n    \"proxyUrlPrefixToRemove\": \"<string>\",\n    \"transformerParameters\": {},\n    \"transformers\": [\n      \"<string>\",\n      \"<string>\"\n    ]\n  },\n  \"persistent\": \"<boolean>\",\n  \"priority\": \"<integer>\",\n  \"scenarioName\": \"<string>\",\n  \"requiredScenarioState\": \"<string>\",\n  \"newScenarioState\": \"<string>\",\n  \"postServeActions\": {},\n  \"serveEventListeners\": [\n    {\n      \"name\": \"<string>\",\n      \"requestPhases\": [\n        \"BEFORE_RESPONSE_SENT\",\n        \"AFTER_COMPLETE\"\n      ],\n      \"parameters\": {}\n    },\n    {\n      \"name\": \"<string>\",\n      \"requestPhases\": [\n        \"BEFORE_MATCH\",\n        \"AFTER_COMPLETE\"\n      ],\n      \"parameters\": {}\n    }\n  ],\n  \"metadata\": {}\n}",
													"options": {
														"raw": {
															"headerFamily": "json",
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/__admin/mappings/:stubMappingId",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"__admin",
														"mappings",
														":stubMappingId"
													],
													"variable": [
														{
															"key": "stubMappingId"
														}
													]
												}
											},
											"status": "Not Found",
											"code": 404,
											"_postman_previewlanguage": "text",
											"header": [],
											"cookie": [],
											"body": ""
										}
									]
								},
								{
									"name": "Delete a stub mapping",
									"request": {
										"method": "DELETE",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/__admin/mappings/:stubMappingId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"__admin",
												"mappings",
												":stubMappingId"
											],
											"variable": [
												{
													"key": "stubMappingId",
													"value": "<string>",
													"description": "(Required) The UUID of stub mapping"
												}
											]
										}
									},
									"response": [
										{
											"name": "OK",
											"originalRequest": {
												"method": "DELETE",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/__admin/mappings/:stubMappingId",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"__admin",
														"mappings",
														":stubMappingId"
													],
													"variable": [
														{
															"key": "stubMappingId"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "text",
											"header": [],
											"cookie": [],
											"body": ""
										},
										{
											"name": "Stub mapping not found",
											"originalRequest": {
												"method": "DELETE",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/__admin/mappings/:stubMappingId",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"__admin",
														"mappings",
														":stubMappingId"
													],
													"variable": [
														{
															"key": "stubMappingId"
														}
													]
												}
											},
											"status": "Not Found",
											"code": 404,
											"_postman_previewlanguage": "text",
											"header": [],
											"cookie": [],
											"body": ""
										}
									]
								}
							]
						},
						{
							"name": "find-by-metadata",
							"item": [
								{
									"name": "find Stub Mappings By Metadata",
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"equalTo\": \"<string>\",\n  \"caseInsensitive\": \"<boolean>\"\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/__admin/mappings/find-by-metadata",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"__admin",
												"mappings",
												"find-by-metadata"
											]
										},
										"description": "Find stubs by matching on their metadata"
									},
									"response": [
										{
											"name": "Matched stub mappings",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"equalTo\": \"<string>\",\n  \"caseInsensitive\": \"<boolean>\"\n}",
													"options": {
														"raw": {
															"headerFamily": "json",
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/__admin/mappings/find-by-metadata",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"__admin",
														"mappings",
														"find-by-metadata"
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"mappings\": [\n    {\n      \"id\": \"<string>\",\n      \"uuid\": \"<string>\",\n      \"name\": \"<string>\",\n      \"request\": {\n        \"scheme\": \"https\",\n        \"host\": \"<string>\",\n        \"port\": \"<integer>\",\n        \"method\": \"UBIWGISMNV\",\n        \"url\": \"<string>\",\n        \"urlPath\": \"<string>\",\n        \"urlPathPattern\": \"<string>\",\n        \"urlPattern\": \"<string>\",\n        \"pathParameters\": {\n          \"non_9_f\": {\n            \"equalTo\": \"<string>\",\n            \"caseInsensitive\": \"<boolean>\"\n          },\n          \"officia_6\": {\n            \"equalTo\": \"<string>\",\n            \"caseInsensitive\": \"<boolean>\"\n          }\n        },\n        \"queryParameters\": {\n          \"cupidatat5_\": {\n            \"equalTo\": \"<string>\",\n            \"caseInsensitive\": \"<boolean>\"\n          }\n        },\n        \"formParameters\": {\n          \"Duis9\": {\n            \"equalTo\": \"<string>\",\n            \"caseInsensitive\": \"<boolean>\"\n          },\n          \"Ut4\": {\n            \"equalTo\": \"<string>\",\n            \"caseInsensitive\": \"<boolean>\"\n          },\n          \"nostrud_3\": {\n            \"equalTo\": \"<string>\",\n            \"caseInsensitive\": \"<boolean>\"\n          }\n        },\n        \"headers\": {\n          \"in__f\": {\n            \"equalTo\": \"<string>\",\n            \"caseInsensitive\": \"<boolean>\"\n          },\n          \"anim_9\": {\n            \"equalTo\": \"<string>\",\n            \"caseInsensitive\": \"<boolean>\"\n          }\n        },\n        \"basicAuthCredentials\": {\n          \"username\": \"<string>\",\n          \"password\": \"<string>\"\n        },\n        \"cookies\": {\n          \"sed_da\": {\n            \"equalTo\": \"<string>\",\n            \"caseInsensitive\": \"<boolean>\"\n          },\n          \"sit95\": {\n            \"equalTo\": \"<string>\",\n            \"caseInsensitive\": \"<boolean>\"\n          },\n          \"ea_9b\": {\n            \"equalTo\": \"<string>\",\n            \"caseInsensitive\": \"<boolean>\"\n          }\n        },\n        \"bodyPatterns\": [\n          {\n            \"equalTo\": \"<string>\",\n            \"caseInsensitive\": \"<boolean>\"\n          },\n          {\n            \"equalTo\": \"<string>\",\n            \"caseInsensitive\": \"<boolean>\"\n          }\n        ],\n        \"customMatcher\": {\n          \"name\": \"<string>\",\n          \"parameters\": {}\n        },\n        \"multipartPatterns\": [\n          {\n            \"name\": \"<string>\",\n            \"matchingType\": \"ANY\",\n            \"headers\": {\n              \"Duis_2\": {\n                \"equalTo\": \"<string>\",\n                \"caseInsensitive\": \"<boolean>\"\n              },\n              \"commodo7\": {\n                \"equalTo\": \"<string>\",\n                \"caseInsensitive\": \"<boolean>\"\n              }\n            },\n            \"bodyPatterns\": [\n              {\n                \"equalTo\": \"<string>\",\n                \"caseInsensitive\": \"<boolean>\"\n              },\n              {\n                \"equalTo\": \"<string>\",\n                \"caseInsensitive\": \"<boolean>\"\n              }\n            ]\n          },\n          {\n            \"name\": \"<string>\",\n            \"matchingType\": \"ANY\",\n            \"headers\": {\n              \"in12f\": {\n                \"equalTo\": \"<string>\",\n                \"caseInsensitive\": \"<boolean>\"\n              }\n            },\n            \"bodyPatterns\": [\n              {\n                \"equalTo\": \"<string>\",\n                \"caseInsensitive\": \"<boolean>\"\n              },\n              {\n                \"equalTo\": \"<string>\",\n                \"caseInsensitive\": \"<boolean>\"\n              }\n            ]\n          }\n        ]\n      },\n      \"response\": {\n        \"status\": \"<integer>\",\n        \"statusMessage\": \"<string>\",\n        \"headers\": {\n          \"irureba1\": \"<string>\",\n          \"adipisicing__8_\": \"<string>\"\n        },\n        \"additionalProxyRequestHeaders\": {\n          \"deserunt_d4\": \"<string>\",\n          \"sunta\": \"<string>\",\n          \"dolor_89\": \"<string>\"\n        },\n        \"removeProxyRequestHeaders\": [\n          \"<string>\",\n          \"<string>\"\n        ],\n        \"body\": \"<string>\",\n        \"base64Body\": \"80UqT+e5LJ==\",\n        \"jsonBody\": {},\n        \"bodyFileName\": \"<string>\",\n        \"fault\": \"RANDOM_DATA_THEN_CLOSE\",\n        \"fixedDelayMilliseconds\": \"<integer>\",\n        \"delayDistribution\": {\n          \"median\": \"<integer>\",\n          \"sigma\": \"<number>\",\n          \"type\": \"lognormal\"\n        },\n        \"chunkedDribbleDelay\": {\n          \"numberOfChunks\": \"<integer>\",\n          \"totalDuration\": \"<integer>\"\n        },\n        \"fromConfiguredStub\": \"<boolean>\",\n        \"proxyBaseUrl\": \"<string>\",\n        \"proxyUrlPrefixToRemove\": \"<string>\",\n        \"transformerParameters\": {},\n        \"transformers\": [\n          \"<string>\",\n          \"<string>\"\n        ]\n      },\n      \"persistent\": \"<boolean>\",\n      \"priority\": \"<integer>\",\n      \"scenarioName\": \"<string>\",\n      \"requiredScenarioState\": \"<string>\",\n      \"newScenarioState\": \"<string>\",\n      \"postServeActions\": {},\n      \"serveEventListeners\": [\n        {\n          \"name\": \"<string>\",\n          \"requestPhases\": [\n            \"AFTER_COMPLETE\",\n            \"BEFORE_MATCH\"\n          ],\n          \"parameters\": {}\n        },\n        {\n          \"name\": \"<string>\",\n          \"requestPhases\": [\n            \"BEFORE_RESPONSE_SENT\",\n            \"BEFORE_MATCH\"\n          ],\n          \"parameters\": {}\n        }\n      ],\n      \"metadata\": {}\n    },\n    {\n      \"id\": \"<string>\",\n      \"uuid\": \"<string>\",\n      \"name\": \"<string>\",\n      \"request\": {\n        \"scheme\": \"http\",\n        \"host\": \"<string>\",\n        \"port\": \"<integer>\",\n        \"method\": \"YKMWL\",\n        \"url\": \"<string>\",\n        \"urlPath\": \"<string>\",\n        \"urlPathPattern\": \"<string>\",\n        \"urlPattern\": \"<string>\",\n        \"pathParameters\": {\n          \"sed_ef\": {\n            \"equalTo\": \"<string>\",\n            \"caseInsensitive\": \"<boolean>\"\n          },\n          \"aute_c07\": {\n            \"equalTo\": \"<string>\",\n            \"caseInsensitive\": \"<boolean>\"\n          }\n        },\n        \"queryParameters\": {\n          \"ex3\": {\n            \"equalTo\": \"<string>\",\n            \"caseInsensitive\": \"<boolean>\"\n          },\n          \"pariaturd99\": {\n            \"equalTo\": \"<string>\",\n            \"caseInsensitive\": \"<boolean>\"\n          }\n        },\n        \"formParameters\": {\n          \"amet_97\": {\n            \"equalTo\": \"<string>\",\n            \"caseInsensitive\": \"<boolean>\"\n          },\n          \"magna9\": {\n            \"equalTo\": \"<string>\",\n            \"caseInsensitive\": \"<boolean>\"\n          },\n          \"velit_884\": {\n            \"equalTo\": \"<string>\",\n            \"caseInsensitive\": \"<boolean>\"\n          },\n          \"veniam_6\": {\n            \"equalTo\": \"<string>\",\n            \"caseInsensitive\": \"<boolean>\"\n          }\n        },\n        \"headers\": {\n          \"uta\": {\n            \"equalTo\": \"<string>\",\n            \"caseInsensitive\": \"<boolean>\"\n          },\n          \"consectetur_9\": {\n            \"equalTo\": \"<string>\",\n            \"caseInsensitive\": \"<boolean>\"\n          },\n          \"in1ab\": {\n            \"equalTo\": \"<string>\",\n            \"caseInsensitive\": \"<boolean>\"\n          },\n          \"nisi_4\": {\n            \"equalTo\": \"<string>\",\n            \"caseInsensitive\": \"<boolean>\"\n          }\n        },\n        \"basicAuthCredentials\": {\n          \"username\": \"<string>\",\n          \"password\": \"<string>\"\n        },\n        \"cookies\": {\n          \"ullamco_d\": {\n            \"equalTo\": \"<string>\",\n            \"caseInsensitive\": \"<boolean>\"\n          }\n        },\n        \"bodyPatterns\": [\n          {\n            \"equalTo\": \"<string>\",\n            \"caseInsensitive\": \"<boolean>\"\n          },\n          {\n            \"equalTo\": \"<string>\",\n            \"caseInsensitive\": \"<boolean>\"\n          }\n        ],\n        \"customMatcher\": {\n          \"name\": \"<string>\",\n          \"parameters\": {}\n        },\n        \"multipartPatterns\": [\n          {\n            \"name\": \"<string>\",\n            \"matchingType\": \"ANY\",\n            \"headers\": {\n              \"mollitba\": {\n                \"equalTo\": \"<string>\",\n                \"caseInsensitive\": \"<boolean>\"\n              }\n            },\n            \"bodyPatterns\": [\n              {\n                \"equalTo\": \"<string>\",\n                \"caseInsensitive\": \"<boolean>\"\n              },\n              {\n                \"equalTo\": \"<string>\",\n                \"caseInsensitive\": \"<boolean>\"\n              }\n            ]\n          },\n          {\n            \"name\": \"<string>\",\n            \"matchingType\": \"ANY\",\n            \"headers\": {\n              \"dolor_73\": {\n                \"equalTo\": \"<string>\",\n                \"caseInsensitive\": \"<boolean>\"\n              },\n              \"velit_6f_\": {\n                \"equalTo\": \"<string>\",\n                \"caseInsensitive\": \"<boolean>\"\n              }\n            },\n            \"bodyPatterns\": [\n              {\n                \"equalTo\": \"<string>\",\n                \"caseInsensitive\": \"<boolean>\"\n              },\n              {\n                \"equalTo\": \"<string>\",\n                \"caseInsensitive\": \"<boolean>\"\n              }\n            ]\n          }\n        ]\n      },\n      \"response\": {\n        \"status\": \"<integer>\",\n        \"statusMessage\": \"<string>\",\n        \"headers\": {\n          \"cillum_3f\": \"<string>\"\n        },\n        \"additionalProxyRequestHeaders\": {\n          \"et2f1\": \"<string>\"\n        },\n        \"removeProxyRequestHeaders\": [\n          \"<string>\",\n          \"<string>\"\n        ],\n        \"body\": \"<string>\",\n        \"base64Body\": \"p0zaShhaVf==\",\n        \"jsonBody\": {},\n        \"bodyFileName\": \"<string>\",\n        \"fault\": \"RANDOM_DATA_THEN_CLOSE\",\n        \"fixedDelayMilliseconds\": \"<integer>\",\n        \"delayDistribution\": {\n          \"median\": \"<integer>\",\n          \"sigma\": \"<number>\",\n          \"type\": \"lognormal\"\n        },\n        \"chunkedDribbleDelay\": {\n          \"numberOfChunks\": \"<integer>\",\n          \"totalDuration\": \"<integer>\"\n        },\n        \"fromConfiguredStub\": \"<boolean>\",\n        \"proxyBaseUrl\": \"<string>\",\n        \"proxyUrlPrefixToRemove\": \"<string>\",\n        \"transformerParameters\": {},\n        \"transformers\": [\n          \"<string>\",\n          \"<string>\"\n        ]\n      },\n      \"persistent\": \"<boolean>\",\n      \"priority\": \"<integer>\",\n      \"scenarioName\": \"<string>\",\n      \"requiredScenarioState\": \"<string>\",\n      \"newScenarioState\": \"<string>\",\n      \"postServeActions\": {},\n      \"serveEventListeners\": [\n        {\n          \"name\": \"<string>\",\n          \"requestPhases\": [\n            \"BEFORE_RESPONSE_SENT\",\n            \"BEFORE_MATCH\"\n          ],\n          \"parameters\": {}\n        },\n        {\n          \"name\": \"<string>\",\n          \"requestPhases\": [\n            \"AFTER_MATCH\",\n            \"AFTER_MATCH\"\n          ],\n          \"parameters\": {}\n        }\n      ],\n      \"metadata\": {}\n    }\n  ],\n  \"meta\": {\n    \"total\": \"<integer>\"\n  }\n}"
										}
									]
								}
							]
						},
						{
							"name": "remove-by-metadata",
							"item": [
								{
									"name": "Delete stub mappings matching metadata",
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"equalTo\": \"<string>\",\n  \"caseInsensitive\": \"<boolean>\"\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/__admin/mappings/remove-by-metadata",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"__admin",
												"mappings",
												"remove-by-metadata"
											]
										}
									},
									"response": [
										{
											"name": "The stub mappings were successfully removed",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"equalTo\": \"<string>\",\n  \"caseInsensitive\": \"<boolean>\"\n}",
													"options": {
														"raw": {
															"headerFamily": "json",
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/__admin/mappings/remove-by-metadata",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"__admin",
														"mappings",
														"remove-by-metadata"
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "text",
											"header": [],
											"cookie": [],
											"body": ""
										}
									]
								}
							]
						},
						{
							"name": "Get all stub mappings",
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/__admin/mappings?limit=<integer>&offset=<integer>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"__admin",
										"mappings"
									],
									"query": [
										{
											"key": "limit",
											"value": "<integer>",
											"description": "The maximum number of results to return"
										},
										{
											"key": "offset",
											"value": "<integer>",
											"description": "The start index of the results to return"
										}
									]
								}
							},
							"response": [
								{
									"name": "All stub mappings",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/__admin/mappings?limit=<integer>&offset=<integer>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"__admin",
												"mappings"
											],
											"query": [
												{
													"key": "limit",
													"value": "<integer>",
													"description": "The maximum number of results to return"
												},
												{
													"key": "offset",
													"value": "<integer>",
													"description": "The start index of the results to return"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"mappings\": [\n    {\n      \"id\": \"<string>\",\n      \"uuid\": \"<string>\",\n      \"name\": \"<string>\",\n      \"request\": {\n        \"scheme\": \"https\",\n        \"host\": \"<string>\",\n        \"port\": \"<integer>\",\n        \"method\": \"UBIWGISMNV\",\n        \"url\": \"<string>\",\n        \"urlPath\": \"<string>\",\n        \"urlPathPattern\": \"<string>\",\n        \"urlPattern\": \"<string>\",\n        \"pathParameters\": {\n          \"non_9_f\": {\n            \"equalTo\": \"<string>\",\n            \"caseInsensitive\": \"<boolean>\"\n          },\n          \"officia_6\": {\n            \"equalTo\": \"<string>\",\n            \"caseInsensitive\": \"<boolean>\"\n          }\n        },\n        \"queryParameters\": {\n          \"cupidatat5_\": {\n            \"equalTo\": \"<string>\",\n            \"caseInsensitive\": \"<boolean>\"\n          }\n        },\n        \"formParameters\": {\n          \"Duis9\": {\n            \"equalTo\": \"<string>\",\n            \"caseInsensitive\": \"<boolean>\"\n          },\n          \"Ut4\": {\n            \"equalTo\": \"<string>\",\n            \"caseInsensitive\": \"<boolean>\"\n          },\n          \"nostrud_3\": {\n            \"equalTo\": \"<string>\",\n            \"caseInsensitive\": \"<boolean>\"\n          }\n        },\n        \"headers\": {\n          \"in__f\": {\n            \"equalTo\": \"<string>\",\n            \"caseInsensitive\": \"<boolean>\"\n          },\n          \"anim_9\": {\n            \"equalTo\": \"<string>\",\n            \"caseInsensitive\": \"<boolean>\"\n          }\n        },\n        \"basicAuthCredentials\": {\n          \"username\": \"<string>\",\n          \"password\": \"<string>\"\n        },\n        \"cookies\": {\n          \"sed_da\": {\n            \"equalTo\": \"<string>\",\n            \"caseInsensitive\": \"<boolean>\"\n          },\n          \"sit95\": {\n            \"equalTo\": \"<string>\",\n            \"caseInsensitive\": \"<boolean>\"\n          },\n          \"ea_9b\": {\n            \"equalTo\": \"<string>\",\n            \"caseInsensitive\": \"<boolean>\"\n          }\n        },\n        \"bodyPatterns\": [\n          {\n            \"equalTo\": \"<string>\",\n            \"caseInsensitive\": \"<boolean>\"\n          },\n          {\n            \"equalTo\": \"<string>\",\n            \"caseInsensitive\": \"<boolean>\"\n          }\n        ],\n        \"customMatcher\": {\n          \"name\": \"<string>\",\n          \"parameters\": {}\n        },\n        \"multipartPatterns\": [\n          {\n            \"name\": \"<string>\",\n            \"matchingType\": \"ANY\",\n            \"headers\": {\n              \"Duis_2\": {\n                \"equalTo\": \"<string>\",\n                \"caseInsensitive\": \"<boolean>\"\n              },\n              \"commodo7\": {\n                \"equalTo\": \"<string>\",\n                \"caseInsensitive\": \"<boolean>\"\n              }\n            },\n            \"bodyPatterns\": [\n              {\n                \"equalTo\": \"<string>\",\n                \"caseInsensitive\": \"<boolean>\"\n              },\n              {\n                \"equalTo\": \"<string>\",\n                \"caseInsensitive\": \"<boolean>\"\n              }\n            ]\n          },\n          {\n            \"name\": \"<string>\",\n            \"matchingType\": \"ANY\",\n            \"headers\": {\n              \"in12f\": {\n                \"equalTo\": \"<string>\",\n                \"caseInsensitive\": \"<boolean>\"\n              }\n            },\n            \"bodyPatterns\": [\n              {\n                \"equalTo\": \"<string>\",\n                \"caseInsensitive\": \"<boolean>\"\n              },\n              {\n                \"equalTo\": \"<string>\",\n                \"caseInsensitive\": \"<boolean>\"\n              }\n            ]\n          }\n        ]\n      },\n      \"response\": {\n        \"status\": \"<integer>\",\n        \"statusMessage\": \"<string>\",\n        \"headers\": {\n          \"irureba1\": \"<string>\",\n          \"adipisicing__8_\": \"<string>\"\n        },\n        \"additionalProxyRequestHeaders\": {\n          \"deserunt_d4\": \"<string>\",\n          \"sunta\": \"<string>\",\n          \"dolor_89\": \"<string>\"\n        },\n        \"removeProxyRequestHeaders\": [\n          \"<string>\",\n          \"<string>\"\n        ],\n        \"body\": \"<string>\",\n        \"base64Body\": \"80UqT+e5LJ==\",\n        \"jsonBody\": {},\n        \"bodyFileName\": \"<string>\",\n        \"fault\": \"RANDOM_DATA_THEN_CLOSE\",\n        \"fixedDelayMilliseconds\": \"<integer>\",\n        \"delayDistribution\": {\n          \"median\": \"<integer>\",\n          \"sigma\": \"<number>\",\n          \"type\": \"lognormal\"\n        },\n        \"chunkedDribbleDelay\": {\n          \"numberOfChunks\": \"<integer>\",\n          \"totalDuration\": \"<integer>\"\n        },\n        \"fromConfiguredStub\": \"<boolean>\",\n        \"proxyBaseUrl\": \"<string>\",\n        \"proxyUrlPrefixToRemove\": \"<string>\",\n        \"transformerParameters\": {},\n        \"transformers\": [\n          \"<string>\",\n          \"<string>\"\n        ]\n      },\n      \"persistent\": \"<boolean>\",\n      \"priority\": \"<integer>\",\n      \"scenarioName\": \"<string>\",\n      \"requiredScenarioState\": \"<string>\",\n      \"newScenarioState\": \"<string>\",\n      \"postServeActions\": {},\n      \"serveEventListeners\": [\n        {\n          \"name\": \"<string>\",\n          \"requestPhases\": [\n            \"AFTER_COMPLETE\",\n            \"BEFORE_MATCH\"\n          ],\n          \"parameters\": {}\n        },\n        {\n          \"name\": \"<string>\",\n          \"requestPhases\": [\n            \"BEFORE_RESPONSE_SENT\",\n            \"BEFORE_MATCH\"\n          ],\n          \"parameters\": {}\n        }\n      ],\n      \"metadata\": {}\n    },\n    {\n      \"id\": \"<string>\",\n      \"uuid\": \"<string>\",\n      \"name\": \"<string>\",\n      \"request\": {\n        \"scheme\": \"http\",\n        \"host\": \"<string>\",\n        \"port\": \"<integer>\",\n        \"method\": \"YKMWL\",\n        \"url\": \"<string>\",\n        \"urlPath\": \"<string>\",\n        \"urlPathPattern\": \"<string>\",\n        \"urlPattern\": \"<string>\",\n        \"pathParameters\": {\n          \"sed_ef\": {\n            \"equalTo\": \"<string>\",\n            \"caseInsensitive\": \"<boolean>\"\n          },\n          \"aute_c07\": {\n            \"equalTo\": \"<string>\",\n            \"caseInsensitive\": \"<boolean>\"\n          }\n        },\n        \"queryParameters\": {\n          \"ex3\": {\n            \"equalTo\": \"<string>\",\n            \"caseInsensitive\": \"<boolean>\"\n          },\n          \"pariaturd99\": {\n            \"equalTo\": \"<string>\",\n            \"caseInsensitive\": \"<boolean>\"\n          }\n        },\n        \"formParameters\": {\n          \"amet_97\": {\n            \"equalTo\": \"<string>\",\n            \"caseInsensitive\": \"<boolean>\"\n          },\n          \"magna9\": {\n            \"equalTo\": \"<string>\",\n            \"caseInsensitive\": \"<boolean>\"\n          },\n          \"velit_884\": {\n            \"equalTo\": \"<string>\",\n            \"caseInsensitive\": \"<boolean>\"\n          },\n          \"veniam_6\": {\n            \"equalTo\": \"<string>\",\n            \"caseInsensitive\": \"<boolean>\"\n          }\n        },\n        \"headers\": {\n          \"uta\": {\n            \"equalTo\": \"<string>\",\n            \"caseInsensitive\": \"<boolean>\"\n          },\n          \"consectetur_9\": {\n            \"equalTo\": \"<string>\",\n            \"caseInsensitive\": \"<boolean>\"\n          },\n          \"in1ab\": {\n            \"equalTo\": \"<string>\",\n            \"caseInsensitive\": \"<boolean>\"\n          },\n          \"nisi_4\": {\n            \"equalTo\": \"<string>\",\n            \"caseInsensitive\": \"<boolean>\"\n          }\n        },\n        \"basicAuthCredentials\": {\n          \"username\": \"<string>\",\n          \"password\": \"<string>\"\n        },\n        \"cookies\": {\n          \"ullamco_d\": {\n            \"equalTo\": \"<string>\",\n            \"caseInsensitive\": \"<boolean>\"\n          }\n        },\n        \"bodyPatterns\": [\n          {\n            \"equalTo\": \"<string>\",\n            \"caseInsensitive\": \"<boolean>\"\n          },\n          {\n            \"equalTo\": \"<string>\",\n            \"caseInsensitive\": \"<boolean>\"\n          }\n        ],\n        \"customMatcher\": {\n          \"name\": \"<string>\",\n          \"parameters\": {}\n        },\n        \"multipartPatterns\": [\n          {\n            \"name\": \"<string>\",\n            \"matchingType\": \"ANY\",\n            \"headers\": {\n              \"mollitba\": {\n                \"equalTo\": \"<string>\",\n                \"caseInsensitive\": \"<boolean>\"\n              }\n            },\n            \"bodyPatterns\": [\n              {\n                \"equalTo\": \"<string>\",\n                \"caseInsensitive\": \"<boolean>\"\n              },\n              {\n                \"equalTo\": \"<string>\",\n                \"caseInsensitive\": \"<boolean>\"\n              }\n            ]\n          },\n          {\n            \"name\": \"<string>\",\n            \"matchingType\": \"ANY\",\n            \"headers\": {\n              \"dolor_73\": {\n                \"equalTo\": \"<string>\",\n                \"caseInsensitive\": \"<boolean>\"\n              },\n              \"velit_6f_\": {\n                \"equalTo\": \"<string>\",\n                \"caseInsensitive\": \"<boolean>\"\n              }\n            },\n            \"bodyPatterns\": [\n              {\n                \"equalTo\": \"<string>\",\n                \"caseInsensitive\": \"<boolean>\"\n              },\n              {\n                \"equalTo\": \"<string>\",\n                \"caseInsensitive\": \"<boolean>\"\n              }\n            ]\n          }\n        ]\n      },\n      \"response\": {\n        \"status\": \"<integer>\",\n        \"statusMessage\": \"<string>\",\n        \"headers\": {\n          \"cillum_3f\": \"<string>\"\n        },\n        \"additionalProxyRequestHeaders\": {\n          \"et2f1\": \"<string>\"\n        },\n        \"removeProxyRequestHeaders\": [\n          \"<string>\",\n          \"<string>\"\n        ],\n        \"body\": \"<string>\",\n        \"base64Body\": \"p0zaShhaVf==\",\n        \"jsonBody\": {},\n        \"bodyFileName\": \"<string>\",\n        \"fault\": \"RANDOM_DATA_THEN_CLOSE\",\n        \"fixedDelayMilliseconds\": \"<integer>\",\n        \"delayDistribution\": {\n          \"median\": \"<integer>\",\n          \"sigma\": \"<number>\",\n          \"type\": \"lognormal\"\n        },\n        \"chunkedDribbleDelay\": {\n          \"numberOfChunks\": \"<integer>\",\n          \"totalDuration\": \"<integer>\"\n        },\n        \"fromConfiguredStub\": \"<boolean>\",\n        \"proxyBaseUrl\": \"<string>\",\n        \"proxyUrlPrefixToRemove\": \"<string>\",\n        \"transformerParameters\": {},\n        \"transformers\": [\n          \"<string>\",\n          \"<string>\"\n        ]\n      },\n      \"persistent\": \"<boolean>\",\n      \"priority\": \"<integer>\",\n      \"scenarioName\": \"<string>\",\n      \"requiredScenarioState\": \"<string>\",\n      \"newScenarioState\": \"<string>\",\n      \"postServeActions\": {},\n      \"serveEventListeners\": [\n        {\n          \"name\": \"<string>\",\n          \"requestPhases\": [\n            \"BEFORE_RESPONSE_SENT\",\n            \"BEFORE_MATCH\"\n          ],\n          \"parameters\": {}\n        },\n        {\n          \"name\": \"<string>\",\n          \"requestPhases\": [\n            \"AFTER_MATCH\",\n            \"AFTER_MATCH\"\n          ],\n          \"parameters\": {}\n        }\n      ],\n      \"metadata\": {}\n    }\n  ],\n  \"meta\": {\n    \"total\": \"<integer>\"\n  }\n}"
								}
							]
						},
						{
							"name": "Create a new stub mapping",
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"id\": \"<string>\",\n  \"uuid\": \"<string>\",\n  \"name\": \"<string>\",\n  \"request\": {\n    \"scheme\": \"https\",\n    \"host\": \"<string>\",\n    \"port\": \"<integer>\",\n    \"method\": \"JBBCOYBLH\",\n    \"url\": \"<string>\",\n    \"urlPath\": \"<string>\",\n    \"urlPathPattern\": \"<string>\",\n    \"urlPattern\": \"<string>\",\n    \"pathParameters\": {\n      \"culpa10b\": {\n        \"equalTo\": \"<string>\",\n        \"caseInsensitive\": \"<boolean>\"\n      }\n    },\n    \"queryParameters\": {\n      \"proident_f\": {\n        \"equalTo\": \"<string>\",\n        \"caseInsensitive\": \"<boolean>\"\n      },\n      \"consectetur_079\": {\n        \"equalTo\": \"<string>\",\n        \"caseInsensitive\": \"<boolean>\"\n      },\n      \"labore_94\": {\n        \"equalTo\": \"<string>\",\n        \"caseInsensitive\": \"<boolean>\"\n      }\n    },\n    \"formParameters\": {\n      \"utb0f\": {\n        \"equalTo\": \"<string>\",\n        \"caseInsensitive\": \"<boolean>\"\n      }\n    },\n    \"headers\": {\n      \"dolor_\": {\n        \"equalTo\": \"<string>\",\n        \"caseInsensitive\": \"<boolean>\"\n      }\n    },\n    \"basicAuthCredentials\": {\n      \"username\": \"<string>\",\n      \"password\": \"<string>\"\n    },\n    \"cookies\": {\n      \"animcf\": {\n        \"equalTo\": \"<string>\",\n        \"caseInsensitive\": \"<boolean>\"\n      },\n      \"ipsum79\": {\n        \"equalTo\": \"<string>\",\n        \"caseInsensitive\": \"<boolean>\"\n      },\n      \"Duis_3\": {\n        \"equalTo\": \"<string>\",\n        \"caseInsensitive\": \"<boolean>\"\n      }\n    },\n    \"bodyPatterns\": [\n      {\n        \"equalTo\": \"<string>\",\n        \"caseInsensitive\": \"<boolean>\"\n      },\n      {\n        \"equalTo\": \"<string>\",\n        \"caseInsensitive\": \"<boolean>\"\n      }\n    ],\n    \"customMatcher\": {\n      \"name\": \"<string>\",\n      \"parameters\": {}\n    },\n    \"multipartPatterns\": [\n      {\n        \"name\": \"<string>\",\n        \"matchingType\": \"ANY\",\n        \"headers\": {\n          \"deserunt_9\": {\n            \"equalTo\": \"<string>\",\n            \"caseInsensitive\": \"<boolean>\"\n          },\n          \"eu_9\": {\n            \"equalTo\": \"<string>\",\n            \"caseInsensitive\": \"<boolean>\"\n          },\n          \"cupidatatd\": {\n            \"equalTo\": \"<string>\",\n            \"caseInsensitive\": \"<boolean>\"\n          }\n        },\n        \"bodyPatterns\": [\n          {\n            \"equalTo\": \"<string>\",\n            \"caseInsensitive\": \"<boolean>\"\n          },\n          {\n            \"equalTo\": \"<string>\",\n            \"caseInsensitive\": \"<boolean>\"\n          }\n        ]\n      },\n      {\n        \"name\": \"<string>\",\n        \"matchingType\": \"ANY\",\n        \"headers\": {\n          \"Duis_d\": {\n            \"equalTo\": \"<string>\",\n            \"caseInsensitive\": \"<boolean>\"\n          },\n          \"consequat_b\": {\n            \"equalTo\": \"<string>\",\n            \"caseInsensitive\": \"<boolean>\"\n          }\n        },\n        \"bodyPatterns\": [\n          {\n            \"equalTo\": \"<string>\",\n            \"caseInsensitive\": \"<boolean>\"\n          },\n          {\n            \"equalTo\": \"<string>\",\n            \"caseInsensitive\": \"<boolean>\"\n          }\n        ]\n      }\n    ]\n  },\n  \"response\": {\n    \"status\": \"<integer>\",\n    \"statusMessage\": \"<string>\",\n    \"headers\": {\n      \"commodo_0\": \"<string>\",\n      \"magna9\": \"<string>\",\n      \"ipsume\": \"<string>\",\n      \"ut_ac\": \"<string>\"\n    },\n    \"additionalProxyRequestHeaders\": {\n      \"nisi11\": \"<string>\",\n      \"aute_a5\": \"<string>\",\n      \"quis_b\": \"<string>\"\n    },\n    \"removeProxyRequestHeaders\": [\n      \"<string>\",\n      \"<string>\"\n    ],\n    \"body\": \"<string>\",\n    \"base64Body\": \"f9KQ+F5/X1Yp6n/cSYQ7ZsoEF5CziyfNra3v\",\n    \"jsonBody\": {},\n    \"bodyFileName\": \"<string>\",\n    \"fault\": \"CONNECTION_RESET_BY_PEER\",\n    \"fixedDelayMilliseconds\": \"<integer>\",\n    \"delayDistribution\": {\n      \"median\": \"<integer>\",\n      \"sigma\": \"<number>\",\n      \"type\": \"lognormal\"\n    },\n    \"chunkedDribbleDelay\": {\n      \"numberOfChunks\": \"<integer>\",\n      \"totalDuration\": \"<integer>\"\n    },\n    \"fromConfiguredStub\": \"<boolean>\",\n    \"proxyBaseUrl\": \"<string>\",\n    \"proxyUrlPrefixToRemove\": \"<string>\",\n    \"transformerParameters\": {},\n    \"transformers\": [\n      \"<string>\",\n      \"<string>\"\n    ]\n  },\n  \"persistent\": \"<boolean>\",\n  \"priority\": \"<integer>\",\n  \"scenarioName\": \"<string>\",\n  \"requiredScenarioState\": \"<string>\",\n  \"newScenarioState\": \"<string>\",\n  \"postServeActions\": {},\n  \"serveEventListeners\": [\n    {\n      \"name\": \"<string>\",\n      \"requestPhases\": [\n        \"BEFORE_RESPONSE_SENT\",\n        \"AFTER_COMPLETE\"\n      ],\n      \"parameters\": {}\n    },\n    {\n      \"name\": \"<string>\",\n      \"requestPhases\": [\n        \"BEFORE_MATCH\",\n        \"AFTER_COMPLETE\"\n      ],\n      \"parameters\": {}\n    }\n  ],\n  \"metadata\": {}\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/__admin/mappings",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"__admin",
										"mappings"
									]
								}
							},
							"response": [
								{
									"name": "The stub mapping",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"id\": \"<string>\",\n  \"uuid\": \"<string>\",\n  \"name\": \"<string>\",\n  \"request\": {\n    \"scheme\": \"https\",\n    \"host\": \"<string>\",\n    \"port\": \"<integer>\",\n    \"method\": \"JBBCOYBLH\",\n    \"url\": \"<string>\",\n    \"urlPath\": \"<string>\",\n    \"urlPathPattern\": \"<string>\",\n    \"urlPattern\": \"<string>\",\n    \"pathParameters\": {\n      \"culpa10b\": {\n        \"equalTo\": \"<string>\",\n        \"caseInsensitive\": \"<boolean>\"\n      }\n    },\n    \"queryParameters\": {\n      \"proident_f\": {\n        \"equalTo\": \"<string>\",\n        \"caseInsensitive\": \"<boolean>\"\n      },\n      \"consectetur_079\": {\n        \"equalTo\": \"<string>\",\n        \"caseInsensitive\": \"<boolean>\"\n      },\n      \"labore_94\": {\n        \"equalTo\": \"<string>\",\n        \"caseInsensitive\": \"<boolean>\"\n      }\n    },\n    \"formParameters\": {\n      \"utb0f\": {\n        \"equalTo\": \"<string>\",\n        \"caseInsensitive\": \"<boolean>\"\n      }\n    },\n    \"headers\": {\n      \"dolor_\": {\n        \"equalTo\": \"<string>\",\n        \"caseInsensitive\": \"<boolean>\"\n      }\n    },\n    \"basicAuthCredentials\": {\n      \"username\": \"<string>\",\n      \"password\": \"<string>\"\n    },\n    \"cookies\": {\n      \"animcf\": {\n        \"equalTo\": \"<string>\",\n        \"caseInsensitive\": \"<boolean>\"\n      },\n      \"ipsum79\": {\n        \"equalTo\": \"<string>\",\n        \"caseInsensitive\": \"<boolean>\"\n      },\n      \"Duis_3\": {\n        \"equalTo\": \"<string>\",\n        \"caseInsensitive\": \"<boolean>\"\n      }\n    },\n    \"bodyPatterns\": [\n      {\n        \"equalTo\": \"<string>\",\n        \"caseInsensitive\": \"<boolean>\"\n      },\n      {\n        \"equalTo\": \"<string>\",\n        \"caseInsensitive\": \"<boolean>\"\n      }\n    ],\n    \"customMatcher\": {\n      \"name\": \"<string>\",\n      \"parameters\": {}\n    },\n    \"multipartPatterns\": [\n      {\n        \"name\": \"<string>\",\n        \"matchingType\": \"ANY\",\n        \"headers\": {\n          \"deserunt_9\": {\n            \"equalTo\": \"<string>\",\n            \"caseInsensitive\": \"<boolean>\"\n          },\n          \"eu_9\": {\n            \"equalTo\": \"<string>\",\n            \"caseInsensitive\": \"<boolean>\"\n          },\n          \"cupidatatd\": {\n            \"equalTo\": \"<string>\",\n            \"caseInsensitive\": \"<boolean>\"\n          }\n        },\n        \"bodyPatterns\": [\n          {\n            \"equalTo\": \"<string>\",\n            \"caseInsensitive\": \"<boolean>\"\n          },\n          {\n            \"equalTo\": \"<string>\",\n            \"caseInsensitive\": \"<boolean>\"\n          }\n        ]\n      },\n      {\n        \"name\": \"<string>\",\n        \"matchingType\": \"ANY\",\n        \"headers\": {\n          \"Duis_d\": {\n            \"equalTo\": \"<string>\",\n            \"caseInsensitive\": \"<boolean>\"\n          },\n          \"consequat_b\": {\n            \"equalTo\": \"<string>\",\n            \"caseInsensitive\": \"<boolean>\"\n          }\n        },\n        \"bodyPatterns\": [\n          {\n            \"equalTo\": \"<string>\",\n            \"caseInsensitive\": \"<boolean>\"\n          },\n          {\n            \"equalTo\": \"<string>\",\n            \"caseInsensitive\": \"<boolean>\"\n          }\n        ]\n      }\n    ]\n  },\n  \"response\": {\n    \"status\": \"<integer>\",\n    \"statusMessage\": \"<string>\",\n    \"headers\": {\n      \"commodo_0\": \"<string>\",\n      \"magna9\": \"<string>\",\n      \"ipsume\": \"<string>\",\n      \"ut_ac\": \"<string>\"\n    },\n    \"additionalProxyRequestHeaders\": {\n      \"nisi11\": \"<string>\",\n      \"aute_a5\": \"<string>\",\n      \"quis_b\": \"<string>\"\n    },\n    \"removeProxyRequestHeaders\": [\n      \"<string>\",\n      \"<string>\"\n    ],\n    \"body\": \"<string>\",\n    \"base64Body\": \"f9KQ+F5/X1Yp6n/cSYQ7ZsoEF5CziyfNra3v\",\n    \"jsonBody\": {},\n    \"bodyFileName\": \"<string>\",\n    \"fault\": \"CONNECTION_RESET_BY_PEER\",\n    \"fixedDelayMilliseconds\": \"<integer>\",\n    \"delayDistribution\": {\n      \"median\": \"<integer>\",\n      \"sigma\": \"<number>\",\n      \"type\": \"lognormal\"\n    },\n    \"chunkedDribbleDelay\": {\n      \"numberOfChunks\": \"<integer>\",\n      \"totalDuration\": \"<integer>\"\n    },\n    \"fromConfiguredStub\": \"<boolean>\",\n    \"proxyBaseUrl\": \"<string>\",\n    \"proxyUrlPrefixToRemove\": \"<string>\",\n    \"transformerParameters\": {},\n    \"transformers\": [\n      \"<string>\",\n      \"<string>\"\n    ]\n  },\n  \"persistent\": \"<boolean>\",\n  \"priority\": \"<integer>\",\n  \"scenarioName\": \"<string>\",\n  \"requiredScenarioState\": \"<string>\",\n  \"newScenarioState\": \"<string>\",\n  \"postServeActions\": {},\n  \"serveEventListeners\": [\n    {\n      \"name\": \"<string>\",\n      \"requestPhases\": [\n        \"BEFORE_RESPONSE_SENT\",\n        \"AFTER_COMPLETE\"\n      ],\n      \"parameters\": {}\n    },\n    {\n      \"name\": \"<string>\",\n      \"requestPhases\": [\n        \"BEFORE_MATCH\",\n        \"AFTER_COMPLETE\"\n      ],\n      \"parameters\": {}\n    }\n  ],\n  \"metadata\": {}\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/__admin/mappings",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"__admin",
												"mappings"
											]
										}
									},
									"status": "Created",
									"code": 201,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"id\": \"<string>\",\n  \"uuid\": \"<string>\",\n  \"name\": \"<string>\",\n  \"request\": {\n    \"scheme\": \"https\",\n    \"host\": \"<string>\",\n    \"port\": \"<integer>\",\n    \"method\": \"JBBCOYBLH\",\n    \"url\": \"<string>\",\n    \"urlPath\": \"<string>\",\n    \"urlPathPattern\": \"<string>\",\n    \"urlPattern\": \"<string>\",\n    \"pathParameters\": {\n      \"culpa10b\": {\n        \"equalTo\": \"<string>\",\n        \"caseInsensitive\": \"<boolean>\"\n      }\n    },\n    \"queryParameters\": {\n      \"proident_f\": {\n        \"equalTo\": \"<string>\",\n        \"caseInsensitive\": \"<boolean>\"\n      },\n      \"consectetur_079\": {\n        \"equalTo\": \"<string>\",\n        \"caseInsensitive\": \"<boolean>\"\n      },\n      \"labore_94\": {\n        \"equalTo\": \"<string>\",\n        \"caseInsensitive\": \"<boolean>\"\n      }\n    },\n    \"formParameters\": {\n      \"utb0f\": {\n        \"equalTo\": \"<string>\",\n        \"caseInsensitive\": \"<boolean>\"\n      }\n    },\n    \"headers\": {\n      \"dolor_\": {\n        \"equalTo\": \"<string>\",\n        \"caseInsensitive\": \"<boolean>\"\n      }\n    },\n    \"basicAuthCredentials\": {\n      \"username\": \"<string>\",\n      \"password\": \"<string>\"\n    },\n    \"cookies\": {\n      \"animcf\": {\n        \"equalTo\": \"<string>\",\n        \"caseInsensitive\": \"<boolean>\"\n      },\n      \"ipsum79\": {\n        \"equalTo\": \"<string>\",\n        \"caseInsensitive\": \"<boolean>\"\n      },\n      \"Duis_3\": {\n        \"equalTo\": \"<string>\",\n        \"caseInsensitive\": \"<boolean>\"\n      }\n    },\n    \"bodyPatterns\": [\n      {\n        \"equalTo\": \"<string>\",\n        \"caseInsensitive\": \"<boolean>\"\n      },\n      {\n        \"equalTo\": \"<string>\",\n        \"caseInsensitive\": \"<boolean>\"\n      }\n    ],\n    \"customMatcher\": {\n      \"name\": \"<string>\",\n      \"parameters\": {}\n    },\n    \"multipartPatterns\": [\n      {\n        \"name\": \"<string>\",\n        \"matchingType\": \"ANY\",\n        \"headers\": {\n          \"deserunt_9\": {\n            \"equalTo\": \"<string>\",\n            \"caseInsensitive\": \"<boolean>\"\n          },\n          \"eu_9\": {\n            \"equalTo\": \"<string>\",\n            \"caseInsensitive\": \"<boolean>\"\n          },\n          \"cupidatatd\": {\n            \"equalTo\": \"<string>\",\n            \"caseInsensitive\": \"<boolean>\"\n          }\n        },\n        \"bodyPatterns\": [\n          {\n            \"equalTo\": \"<string>\",\n            \"caseInsensitive\": \"<boolean>\"\n          },\n          {\n            \"equalTo\": \"<string>\",\n            \"caseInsensitive\": \"<boolean>\"\n          }\n        ]\n      },\n      {\n        \"name\": \"<string>\",\n        \"matchingType\": \"ANY\",\n        \"headers\": {\n          \"Duis_d\": {\n            \"equalTo\": \"<string>\",\n            \"caseInsensitive\": \"<boolean>\"\n          },\n          \"consequat_b\": {\n            \"equalTo\": \"<string>\",\n            \"caseInsensitive\": \"<boolean>\"\n          }\n        },\n        \"bodyPatterns\": [\n          {\n            \"equalTo\": \"<string>\",\n            \"caseInsensitive\": \"<boolean>\"\n          },\n          {\n            \"equalTo\": \"<string>\",\n            \"caseInsensitive\": \"<boolean>\"\n          }\n        ]\n      }\n    ]\n  },\n  \"response\": {\n    \"status\": \"<integer>\",\n    \"statusMessage\": \"<string>\",\n    \"headers\": {\n      \"commodo_0\": \"<string>\",\n      \"magna9\": \"<string>\",\n      \"ipsume\": \"<string>\",\n      \"ut_ac\": \"<string>\"\n    },\n    \"additionalProxyRequestHeaders\": {\n      \"nisi11\": \"<string>\",\n      \"aute_a5\": \"<string>\",\n      \"quis_b\": \"<string>\"\n    },\n    \"removeProxyRequestHeaders\": [\n      \"<string>\",\n      \"<string>\"\n    ],\n    \"body\": \"<string>\",\n    \"base64Body\": \"f9KQ+F5/X1Yp6n/cSYQ7ZsoEF5CziyfNra3v\",\n    \"jsonBody\": {},\n    \"bodyFileName\": \"<string>\",\n    \"fault\": \"CONNECTION_RESET_BY_PEER\",\n    \"fixedDelayMilliseconds\": \"<integer>\",\n    \"delayDistribution\": {\n      \"median\": \"<integer>\",\n      \"sigma\": \"<number>\",\n      \"type\": \"lognormal\"\n    },\n    \"chunkedDribbleDelay\": {\n      \"numberOfChunks\": \"<integer>\",\n      \"totalDuration\": \"<integer>\"\n    },\n    \"fromConfiguredStub\": \"<boolean>\",\n    \"proxyBaseUrl\": \"<string>\",\n    \"proxyUrlPrefixToRemove\": \"<string>\",\n    \"transformerParameters\": {},\n    \"transformers\": [\n      \"<string>\",\n      \"<string>\"\n    ]\n  },\n  \"persistent\": \"<boolean>\",\n  \"priority\": \"<integer>\",\n  \"scenarioName\": \"<string>\",\n  \"requiredScenarioState\": \"<string>\",\n  \"newScenarioState\": \"<string>\",\n  \"postServeActions\": {},\n  \"serveEventListeners\": [\n    {\n      \"name\": \"<string>\",\n      \"requestPhases\": [\n        \"BEFORE_RESPONSE_SENT\",\n        \"AFTER_COMPLETE\"\n      ],\n      \"parameters\": {}\n    },\n    {\n      \"name\": \"<string>\",\n      \"requestPhases\": [\n        \"BEFORE_MATCH\",\n        \"AFTER_COMPLETE\"\n      ],\n      \"parameters\": {}\n    }\n  ],\n  \"metadata\": {}\n}"
								},
								{
									"name": "Bad request body",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"id\": \"<string>\",\n  \"uuid\": \"<string>\",\n  \"name\": \"<string>\",\n  \"request\": {\n    \"scheme\": \"https\",\n    \"host\": \"<string>\",\n    \"port\": \"<integer>\",\n    \"method\": \"JBBCOYBLH\",\n    \"url\": \"<string>\",\n    \"urlPath\": \"<string>\",\n    \"urlPathPattern\": \"<string>\",\n    \"urlPattern\": \"<string>\",\n    \"pathParameters\": {\n      \"culpa10b\": {\n        \"equalTo\": \"<string>\",\n        \"caseInsensitive\": \"<boolean>\"\n      }\n    },\n    \"queryParameters\": {\n      \"proident_f\": {\n        \"equalTo\": \"<string>\",\n        \"caseInsensitive\": \"<boolean>\"\n      },\n      \"consectetur_079\": {\n        \"equalTo\": \"<string>\",\n        \"caseInsensitive\": \"<boolean>\"\n      },\n      \"labore_94\": {\n        \"equalTo\": \"<string>\",\n        \"caseInsensitive\": \"<boolean>\"\n      }\n    },\n    \"formParameters\": {\n      \"utb0f\": {\n        \"equalTo\": \"<string>\",\n        \"caseInsensitive\": \"<boolean>\"\n      }\n    },\n    \"headers\": {\n      \"dolor_\": {\n        \"equalTo\": \"<string>\",\n        \"caseInsensitive\": \"<boolean>\"\n      }\n    },\n    \"basicAuthCredentials\": {\n      \"username\": \"<string>\",\n      \"password\": \"<string>\"\n    },\n    \"cookies\": {\n      \"animcf\": {\n        \"equalTo\": \"<string>\",\n        \"caseInsensitive\": \"<boolean>\"\n      },\n      \"ipsum79\": {\n        \"equalTo\": \"<string>\",\n        \"caseInsensitive\": \"<boolean>\"\n      },\n      \"Duis_3\": {\n        \"equalTo\": \"<string>\",\n        \"caseInsensitive\": \"<boolean>\"\n      }\n    },\n    \"bodyPatterns\": [\n      {\n        \"equalTo\": \"<string>\",\n        \"caseInsensitive\": \"<boolean>\"\n      },\n      {\n        \"equalTo\": \"<string>\",\n        \"caseInsensitive\": \"<boolean>\"\n      }\n    ],\n    \"customMatcher\": {\n      \"name\": \"<string>\",\n      \"parameters\": {}\n    },\n    \"multipartPatterns\": [\n      {\n        \"name\": \"<string>\",\n        \"matchingType\": \"ANY\",\n        \"headers\": {\n          \"deserunt_9\": {\n            \"equalTo\": \"<string>\",\n            \"caseInsensitive\": \"<boolean>\"\n          },\n          \"eu_9\": {\n            \"equalTo\": \"<string>\",\n            \"caseInsensitive\": \"<boolean>\"\n          },\n          \"cupidatatd\": {\n            \"equalTo\": \"<string>\",\n            \"caseInsensitive\": \"<boolean>\"\n          }\n        },\n        \"bodyPatterns\": [\n          {\n            \"equalTo\": \"<string>\",\n            \"caseInsensitive\": \"<boolean>\"\n          },\n          {\n            \"equalTo\": \"<string>\",\n            \"caseInsensitive\": \"<boolean>\"\n          }\n        ]\n      },\n      {\n        \"name\": \"<string>\",\n        \"matchingType\": \"ANY\",\n        \"headers\": {\n          \"Duis_d\": {\n            \"equalTo\": \"<string>\",\n            \"caseInsensitive\": \"<boolean>\"\n          },\n          \"consequat_b\": {\n            \"equalTo\": \"<string>\",\n            \"caseInsensitive\": \"<boolean>\"\n          }\n        },\n        \"bodyPatterns\": [\n          {\n            \"equalTo\": \"<string>\",\n            \"caseInsensitive\": \"<boolean>\"\n          },\n          {\n            \"equalTo\": \"<string>\",\n            \"caseInsensitive\": \"<boolean>\"\n          }\n        ]\n      }\n    ]\n  },\n  \"response\": {\n    \"status\": \"<integer>\",\n    \"statusMessage\": \"<string>\",\n    \"headers\": {\n      \"commodo_0\": \"<string>\",\n      \"magna9\": \"<string>\",\n      \"ipsume\": \"<string>\",\n      \"ut_ac\": \"<string>\"\n    },\n    \"additionalProxyRequestHeaders\": {\n      \"nisi11\": \"<string>\",\n      \"aute_a5\": \"<string>\",\n      \"quis_b\": \"<string>\"\n    },\n    \"removeProxyRequestHeaders\": [\n      \"<string>\",\n      \"<string>\"\n    ],\n    \"body\": \"<string>\",\n    \"base64Body\": \"f9KQ+F5/X1Yp6n/cSYQ7ZsoEF5CziyfNra3v\",\n    \"jsonBody\": {},\n    \"bodyFileName\": \"<string>\",\n    \"fault\": \"CONNECTION_RESET_BY_PEER\",\n    \"fixedDelayMilliseconds\": \"<integer>\",\n    \"delayDistribution\": {\n      \"median\": \"<integer>\",\n      \"sigma\": \"<number>\",\n      \"type\": \"lognormal\"\n    },\n    \"chunkedDribbleDelay\": {\n      \"numberOfChunks\": \"<integer>\",\n      \"totalDuration\": \"<integer>\"\n    },\n    \"fromConfiguredStub\": \"<boolean>\",\n    \"proxyBaseUrl\": \"<string>\",\n    \"proxyUrlPrefixToRemove\": \"<string>\",\n    \"transformerParameters\": {},\n    \"transformers\": [\n      \"<string>\",\n      \"<string>\"\n    ]\n  },\n  \"persistent\": \"<boolean>\",\n  \"priority\": \"<integer>\",\n  \"scenarioName\": \"<string>\",\n  \"requiredScenarioState\": \"<string>\",\n  \"newScenarioState\": \"<string>\",\n  \"postServeActions\": {},\n  \"serveEventListeners\": [\n    {\n      \"name\": \"<string>\",\n      \"requestPhases\": [\n        \"BEFORE_RESPONSE_SENT\",\n        \"AFTER_COMPLETE\"\n      ],\n      \"parameters\": {}\n    },\n    {\n      \"name\": \"<string>\",\n      \"requestPhases\": [\n        \"BEFORE_MATCH\",\n        \"AFTER_COMPLETE\"\n      ],\n      \"parameters\": {}\n    }\n  ],\n  \"metadata\": {}\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/__admin/mappings",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"__admin",
												"mappings"
											]
										}
									},
									"status": "Unprocessable Entity (WebDAV) (RFC 4918)",
									"code": 422,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"errors\": [\n    {\n      \"code\": \"<integer>\",\n      \"source\": \"<string>\",\n      \"title\": \"<string>\",\n      \"detail\": \"<string>\"\n    },\n    {\n      \"code\": \"<integer>\",\n      \"source\": \"<string>\",\n      \"title\": \"<string>\",\n      \"detail\": \"<string>\"\n    }\n  ]\n}"
								}
							]
						},
						{
							"name": "Delete all stub mappings",
							"request": {
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/__admin/mappings",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"__admin",
										"mappings"
									]
								}
							},
							"response": [
								{
									"name": "Successfully deleted",
									"originalRequest": {
										"method": "DELETE",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/__admin/mappings",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"__admin",
												"mappings"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "text",
									"header": [],
									"cookie": [],
									"body": ""
								}
							]
						}
					]
				},
				{
					"name": "requests",
					"item": [
						{
							"name": "{requestId}",
							"item": [
								{
									"name": "Get request by ID",
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/__admin/requests/:requestId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"__admin",
												"requests",
												":requestId"
											],
											"variable": [
												{
													"key": "requestId",
													"value": "<string>",
													"description": "(Required) The UUID of the logged request"
												}
											]
										}
									},
									"response": [
										{
											"name": "OK",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/__admin/requests/:requestId",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"__admin",
														"requests",
														":requestId"
													],
													"variable": [
														{
															"key": "requestId"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"example\": {\n    \"request\": {\n      \"url\": \"/received-request/2\",\n      \"absoluteUrl\": \"http://localhost:56738/received-request/2\",\n      \"method\": \"GET\",\n      \"clientIp\": \"127.0.0.1\",\n      \"headers\": {\n        \"Connection\": \"keep-alive\",\n        \"Host\": \"localhost:56738\",\n        \"User-Agent\": \"Apache-HttpClient/4.5.1 (Java/1.7.0_51)\"\n      },\n      \"cookies\": {},\n      \"browserProxyRequest\": false,\n      \"loggedDate\": 1471442557047,\n      \"bodyAsBase64\": \"\",\n      \"body\": \"\",\n      \"loggedDateString\": \"2016-08-17T14:02:37Z\"\n    },\n    \"responseDefinition\": {\n      \"status\": 404,\n      \"transformers\": [],\n      \"fromConfiguredStub\": false,\n      \"transformerParameters\": {}\n    }\n  }\n}"
										},
										{
											"name": "Request not found",
											"originalRequest": {
												"method": "GET",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/__admin/requests/:requestId",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"__admin",
														"requests",
														":requestId"
													],
													"variable": [
														{
															"key": "requestId"
														}
													]
												}
											},
											"status": "Not Found",
											"code": 404,
											"_postman_previewlanguage": "text",
											"header": [],
											"cookie": [],
											"body": ""
										}
									]
								},
								{
									"name": "Delete request by ID",
									"request": {
										"method": "DELETE",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/__admin/requests/:requestId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"__admin",
												"requests",
												":requestId"
											],
											"variable": [
												{
													"key": "requestId",
													"value": "<string>",
													"description": "(Required) The UUID of the logged request"
												}
											]
										}
									},
									"response": [
										{
											"name": "Successfully deleted",
											"originalRequest": {
												"method": "DELETE",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/__admin/requests/:requestId",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"__admin",
														"requests",
														":requestId"
													],
													"variable": [
														{
															"key": "requestId"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "text",
											"header": [],
											"cookie": [],
											"body": ""
										}
									]
								}
							]
						},
						{
							"name": "reset",
							"item": [
								{
									"name": "Empty the request journal",
									"request": {
										"method": "POST",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/__admin/requests/reset",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"__admin",
												"requests",
												"reset"
											]
										}
									},
									"response": [
										{
											"name": "Successfully reset",
											"originalRequest": {
												"method": "POST",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/__admin/requests/reset",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"__admin",
														"requests",
														"reset"
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "text",
											"header": [],
											"cookie": [],
											"body": ""
										}
									]
								}
							]
						},
						{
							"name": "count",
							"item": [
								{
									"name": "Count requests by criteria",
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"scheme\": \"http\",\n  \"host\": \"<string>\",\n  \"port\": \"<integer>\",\n  \"method\": \"VONWN\",\n  \"url\": \"<string>\",\n  \"urlPath\": \"<string>\",\n  \"urlPathPattern\": \"<string>\",\n  \"urlPattern\": \"<string>\",\n  \"pathParameters\": {\n    \"reprehenderitf\": {\n      \"equalTo\": \"<string>\",\n      \"caseInsensitive\": \"<boolean>\"\n    },\n    \"uta\": {\n      \"equalTo\": \"<string>\",\n      \"caseInsensitive\": \"<boolean>\"\n    },\n    \"nulla_ae\": {\n      \"equalTo\": \"<string>\",\n      \"caseInsensitive\": \"<boolean>\"\n    },\n    \"laborumde\": {\n      \"equalTo\": \"<string>\",\n      \"caseInsensitive\": \"<boolean>\"\n    }\n  },\n  \"queryParameters\": {\n    \"in19\": {\n      \"equalTo\": \"<string>\",\n      \"caseInsensitive\": \"<boolean>\"\n    },\n    \"exf1b\": {\n      \"equalTo\": \"<string>\",\n      \"caseInsensitive\": \"<boolean>\"\n    }\n  },\n  \"formParameters\": {\n    \"Excepteur66\": {\n      \"equalTo\": \"<string>\",\n      \"caseInsensitive\": \"<boolean>\"\n    }\n  },\n  \"headers\": {\n    \"ut_7b\": {\n      \"equalTo\": \"<string>\",\n      \"caseInsensitive\": \"<boolean>\"\n    }\n  },\n  \"basicAuthCredentials\": {\n    \"username\": \"<string>\",\n    \"password\": \"<string>\"\n  },\n  \"cookies\": {\n    \"ut_9af\": {\n      \"equalTo\": \"<string>\",\n      \"caseInsensitive\": \"<boolean>\"\n    },\n    \"consectetur5c\": {\n      \"equalTo\": \"<string>\",\n      \"caseInsensitive\": \"<boolean>\"\n    },\n    \"aute_1\": {\n      \"equalTo\": \"<string>\",\n      \"caseInsensitive\": \"<boolean>\"\n    },\n    \"nisi_16\": {\n      \"equalTo\": \"<string>\",\n      \"caseInsensitive\": \"<boolean>\"\n    },\n    \"sed_ce4\": {\n      \"equalTo\": \"<string>\",\n      \"caseInsensitive\": \"<boolean>\"\n    }\n  },\n  \"bodyPatterns\": [\n    {\n      \"equalTo\": \"<string>\",\n      \"caseInsensitive\": \"<boolean>\"\n    },\n    {\n      \"equalTo\": \"<string>\",\n      \"caseInsensitive\": \"<boolean>\"\n    }\n  ],\n  \"customMatcher\": {\n    \"name\": \"<string>\",\n    \"parameters\": {}\n  },\n  \"multipartPatterns\": [\n    {\n      \"name\": \"<string>\",\n      \"matchingType\": \"ANY\",\n      \"headers\": {\n        \"laboris_\": {\n          \"equalTo\": \"<string>\",\n          \"caseInsensitive\": \"<boolean>\"\n        },\n        \"adipisicingd\": {\n          \"equalTo\": \"<string>\",\n          \"caseInsensitive\": \"<boolean>\"\n        }\n      },\n      \"bodyPatterns\": [\n        {\n          \"equalTo\": \"<string>\",\n          \"caseInsensitive\": \"<boolean>\"\n        },\n        {\n          \"equalTo\": \"<string>\",\n          \"caseInsensitive\": \"<boolean>\"\n        }\n      ]\n    },\n    {\n      \"name\": \"<string>\",\n      \"matchingType\": \"ANY\",\n      \"headers\": {\n        \"qui_9\": {\n          \"equalTo\": \"<string>\",\n          \"caseInsensitive\": \"<boolean>\"\n        },\n        \"dolor_a\": {\n          \"equalTo\": \"<string>\",\n          \"caseInsensitive\": \"<boolean>\"\n        },\n        \"nulla_b10\": {\n          \"equalTo\": \"<string>\",\n          \"caseInsensitive\": \"<boolean>\"\n        }\n      },\n      \"bodyPatterns\": [\n        {\n          \"equalTo\": \"<string>\",\n          \"caseInsensitive\": \"<boolean>\"\n        },\n        {\n          \"equalTo\": \"<string>\",\n          \"caseInsensitive\": \"<boolean>\"\n        }\n      ]\n    }\n  ]\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/__admin/requests/count",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"__admin",
												"requests",
												"count"
											]
										},
										"description": "Count requests logged in the journal matching the specified criteria"
									},
									"response": [
										{
											"name": "Number of matching requests",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"scheme\": \"http\",\n  \"host\": \"<string>\",\n  \"port\": \"<integer>\",\n  \"method\": \"VONWN\",\n  \"url\": \"<string>\",\n  \"urlPath\": \"<string>\",\n  \"urlPathPattern\": \"<string>\",\n  \"urlPattern\": \"<string>\",\n  \"pathParameters\": {\n    \"reprehenderitf\": {\n      \"equalTo\": \"<string>\",\n      \"caseInsensitive\": \"<boolean>\"\n    },\n    \"uta\": {\n      \"equalTo\": \"<string>\",\n      \"caseInsensitive\": \"<boolean>\"\n    },\n    \"nulla_ae\": {\n      \"equalTo\": \"<string>\",\n      \"caseInsensitive\": \"<boolean>\"\n    },\n    \"laborumde\": {\n      \"equalTo\": \"<string>\",\n      \"caseInsensitive\": \"<boolean>\"\n    }\n  },\n  \"queryParameters\": {\n    \"in19\": {\n      \"equalTo\": \"<string>\",\n      \"caseInsensitive\": \"<boolean>\"\n    },\n    \"exf1b\": {\n      \"equalTo\": \"<string>\",\n      \"caseInsensitive\": \"<boolean>\"\n    }\n  },\n  \"formParameters\": {\n    \"Excepteur66\": {\n      \"equalTo\": \"<string>\",\n      \"caseInsensitive\": \"<boolean>\"\n    }\n  },\n  \"headers\": {\n    \"ut_7b\": {\n      \"equalTo\": \"<string>\",\n      \"caseInsensitive\": \"<boolean>\"\n    }\n  },\n  \"basicAuthCredentials\": {\n    \"username\": \"<string>\",\n    \"password\": \"<string>\"\n  },\n  \"cookies\": {\n    \"ut_9af\": {\n      \"equalTo\": \"<string>\",\n      \"caseInsensitive\": \"<boolean>\"\n    },\n    \"consectetur5c\": {\n      \"equalTo\": \"<string>\",\n      \"caseInsensitive\": \"<boolean>\"\n    },\n    \"aute_1\": {\n      \"equalTo\": \"<string>\",\n      \"caseInsensitive\": \"<boolean>\"\n    },\n    \"nisi_16\": {\n      \"equalTo\": \"<string>\",\n      \"caseInsensitive\": \"<boolean>\"\n    },\n    \"sed_ce4\": {\n      \"equalTo\": \"<string>\",\n      \"caseInsensitive\": \"<boolean>\"\n    }\n  },\n  \"bodyPatterns\": [\n    {\n      \"equalTo\": \"<string>\",\n      \"caseInsensitive\": \"<boolean>\"\n    },\n    {\n      \"equalTo\": \"<string>\",\n      \"caseInsensitive\": \"<boolean>\"\n    }\n  ],\n  \"customMatcher\": {\n    \"name\": \"<string>\",\n    \"parameters\": {}\n  },\n  \"multipartPatterns\": [\n    {\n      \"name\": \"<string>\",\n      \"matchingType\": \"ANY\",\n      \"headers\": {\n        \"laboris_\": {\n          \"equalTo\": \"<string>\",\n          \"caseInsensitive\": \"<boolean>\"\n        },\n        \"adipisicingd\": {\n          \"equalTo\": \"<string>\",\n          \"caseInsensitive\": \"<boolean>\"\n        }\n      },\n      \"bodyPatterns\": [\n        {\n          \"equalTo\": \"<string>\",\n          \"caseInsensitive\": \"<boolean>\"\n        },\n        {\n          \"equalTo\": \"<string>\",\n          \"caseInsensitive\": \"<boolean>\"\n        }\n      ]\n    },\n    {\n      \"name\": \"<string>\",\n      \"matchingType\": \"ANY\",\n      \"headers\": {\n        \"qui_9\": {\n          \"equalTo\": \"<string>\",\n          \"caseInsensitive\": \"<boolean>\"\n        },\n        \"dolor_a\": {\n          \"equalTo\": \"<string>\",\n          \"caseInsensitive\": \"<boolean>\"\n        },\n        \"nulla_b10\": {\n          \"equalTo\": \"<string>\",\n          \"caseInsensitive\": \"<boolean>\"\n        }\n      },\n      \"bodyPatterns\": [\n        {\n          \"equalTo\": \"<string>\",\n          \"caseInsensitive\": \"<boolean>\"\n        },\n        {\n          \"equalTo\": \"<string>\",\n          \"caseInsensitive\": \"<boolean>\"\n        }\n      ]\n    }\n  ]\n}",
													"options": {
														"raw": {
															"headerFamily": "json",
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/__admin/requests/count",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"__admin",
														"requests",
														"count"
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"count\": \"<integer>\"\n}"
										}
									]
								}
							]
						},
						{
							"name": "remove",
							"item": [
								{
									"name": "Remove requests by criteria",
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"scheme\": \"http\",\n  \"host\": \"<string>\",\n  \"port\": \"<integer>\",\n  \"method\": \"VONWN\",\n  \"url\": \"<string>\",\n  \"urlPath\": \"<string>\",\n  \"urlPathPattern\": \"<string>\",\n  \"urlPattern\": \"<string>\",\n  \"pathParameters\": {\n    \"reprehenderitf\": {\n      \"equalTo\": \"<string>\",\n      \"caseInsensitive\": \"<boolean>\"\n    },\n    \"uta\": {\n      \"equalTo\": \"<string>\",\n      \"caseInsensitive\": \"<boolean>\"\n    },\n    \"nulla_ae\": {\n      \"equalTo\": \"<string>\",\n      \"caseInsensitive\": \"<boolean>\"\n    },\n    \"laborumde\": {\n      \"equalTo\": \"<string>\",\n      \"caseInsensitive\": \"<boolean>\"\n    }\n  },\n  \"queryParameters\": {\n    \"in19\": {\n      \"equalTo\": \"<string>\",\n      \"caseInsensitive\": \"<boolean>\"\n    },\n    \"exf1b\": {\n      \"equalTo\": \"<string>\",\n      \"caseInsensitive\": \"<boolean>\"\n    }\n  },\n  \"formParameters\": {\n    \"Excepteur66\": {\n      \"equalTo\": \"<string>\",\n      \"caseInsensitive\": \"<boolean>\"\n    }\n  },\n  \"headers\": {\n    \"ut_7b\": {\n      \"equalTo\": \"<string>\",\n      \"caseInsensitive\": \"<boolean>\"\n    }\n  },\n  \"basicAuthCredentials\": {\n    \"username\": \"<string>\",\n    \"password\": \"<string>\"\n  },\n  \"cookies\": {\n    \"ut_9af\": {\n      \"equalTo\": \"<string>\",\n      \"caseInsensitive\": \"<boolean>\"\n    },\n    \"consectetur5c\": {\n      \"equalTo\": \"<string>\",\n      \"caseInsensitive\": \"<boolean>\"\n    },\n    \"aute_1\": {\n      \"equalTo\": \"<string>\",\n      \"caseInsensitive\": \"<boolean>\"\n    },\n    \"nisi_16\": {\n      \"equalTo\": \"<string>\",\n      \"caseInsensitive\": \"<boolean>\"\n    },\n    \"sed_ce4\": {\n      \"equalTo\": \"<string>\",\n      \"caseInsensitive\": \"<boolean>\"\n    }\n  },\n  \"bodyPatterns\": [\n    {\n      \"equalTo\": \"<string>\",\n      \"caseInsensitive\": \"<boolean>\"\n    },\n    {\n      \"equalTo\": \"<string>\",\n      \"caseInsensitive\": \"<boolean>\"\n    }\n  ],\n  \"customMatcher\": {\n    \"name\": \"<string>\",\n    \"parameters\": {}\n  },\n  \"multipartPatterns\": [\n    {\n      \"name\": \"<string>\",\n      \"matchingType\": \"ANY\",\n      \"headers\": {\n        \"laboris_\": {\n          \"equalTo\": \"<string>\",\n          \"caseInsensitive\": \"<boolean>\"\n        },\n        \"adipisicingd\": {\n          \"equalTo\": \"<string>\",\n          \"caseInsensitive\": \"<boolean>\"\n        }\n      },\n      \"bodyPatterns\": [\n        {\n          \"equalTo\": \"<string>\",\n          \"caseInsensitive\": \"<boolean>\"\n        },\n        {\n          \"equalTo\": \"<string>\",\n          \"caseInsensitive\": \"<boolean>\"\n        }\n      ]\n    },\n    {\n      \"name\": \"<string>\",\n      \"matchingType\": \"ANY\",\n      \"headers\": {\n        \"qui_9\": {\n          \"equalTo\": \"<string>\",\n          \"caseInsensitive\": \"<boolean>\"\n        },\n        \"dolor_a\": {\n          \"equalTo\": \"<string>\",\n          \"caseInsensitive\": \"<boolean>\"\n        },\n        \"nulla_b10\": {\n          \"equalTo\": \"<string>\",\n          \"caseInsensitive\": \"<boolean>\"\n        }\n      },\n      \"bodyPatterns\": [\n        {\n          \"equalTo\": \"<string>\",\n          \"caseInsensitive\": \"<boolean>\"\n        },\n        {\n          \"equalTo\": \"<string>\",\n          \"caseInsensitive\": \"<boolean>\"\n        }\n      ]\n    }\n  ]\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/__admin/requests/remove",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"__admin",
												"requests",
												"remove"
											]
										},
										"description": "Removed requests logged in the journal matching the specified criteria"
									},
									"response": [
										{
											"name": "Removed request details",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"scheme\": \"http\",\n  \"host\": \"<string>\",\n  \"port\": \"<integer>\",\n  \"method\": \"VONWN\",\n  \"url\": \"<string>\",\n  \"urlPath\": \"<string>\",\n  \"urlPathPattern\": \"<string>\",\n  \"urlPattern\": \"<string>\",\n  \"pathParameters\": {\n    \"reprehenderitf\": {\n      \"equalTo\": \"<string>\",\n      \"caseInsensitive\": \"<boolean>\"\n    },\n    \"uta\": {\n      \"equalTo\": \"<string>\",\n      \"caseInsensitive\": \"<boolean>\"\n    },\n    \"nulla_ae\": {\n      \"equalTo\": \"<string>\",\n      \"caseInsensitive\": \"<boolean>\"\n    },\n    \"laborumde\": {\n      \"equalTo\": \"<string>\",\n      \"caseInsensitive\": \"<boolean>\"\n    }\n  },\n  \"queryParameters\": {\n    \"in19\": {\n      \"equalTo\": \"<string>\",\n      \"caseInsensitive\": \"<boolean>\"\n    },\n    \"exf1b\": {\n      \"equalTo\": \"<string>\",\n      \"caseInsensitive\": \"<boolean>\"\n    }\n  },\n  \"formParameters\": {\n    \"Excepteur66\": {\n      \"equalTo\": \"<string>\",\n      \"caseInsensitive\": \"<boolean>\"\n    }\n  },\n  \"headers\": {\n    \"ut_7b\": {\n      \"equalTo\": \"<string>\",\n      \"caseInsensitive\": \"<boolean>\"\n    }\n  },\n  \"basicAuthCredentials\": {\n    \"username\": \"<string>\",\n    \"password\": \"<string>\"\n  },\n  \"cookies\": {\n    \"ut_9af\": {\n      \"equalTo\": \"<string>\",\n      \"caseInsensitive\": \"<boolean>\"\n    },\n    \"consectetur5c\": {\n      \"equalTo\": \"<string>\",\n      \"caseInsensitive\": \"<boolean>\"\n    },\n    \"aute_1\": {\n      \"equalTo\": \"<string>\",\n      \"caseInsensitive\": \"<boolean>\"\n    },\n    \"nisi_16\": {\n      \"equalTo\": \"<string>\",\n      \"caseInsensitive\": \"<boolean>\"\n    },\n    \"sed_ce4\": {\n      \"equalTo\": \"<string>\",\n      \"caseInsensitive\": \"<boolean>\"\n    }\n  },\n  \"bodyPatterns\": [\n    {\n      \"equalTo\": \"<string>\",\n      \"caseInsensitive\": \"<boolean>\"\n    },\n    {\n      \"equalTo\": \"<string>\",\n      \"caseInsensitive\": \"<boolean>\"\n    }\n  ],\n  \"customMatcher\": {\n    \"name\": \"<string>\",\n    \"parameters\": {}\n  },\n  \"multipartPatterns\": [\n    {\n      \"name\": \"<string>\",\n      \"matchingType\": \"ANY\",\n      \"headers\": {\n        \"laboris_\": {\n          \"equalTo\": \"<string>\",\n          \"caseInsensitive\": \"<boolean>\"\n        },\n        \"adipisicingd\": {\n          \"equalTo\": \"<string>\",\n          \"caseInsensitive\": \"<boolean>\"\n        }\n      },\n      \"bodyPatterns\": [\n        {\n          \"equalTo\": \"<string>\",\n          \"caseInsensitive\": \"<boolean>\"\n        },\n        {\n          \"equalTo\": \"<string>\",\n          \"caseInsensitive\": \"<boolean>\"\n        }\n      ]\n    },\n    {\n      \"name\": \"<string>\",\n      \"matchingType\": \"ANY\",\n      \"headers\": {\n        \"qui_9\": {\n          \"equalTo\": \"<string>\",\n          \"caseInsensitive\": \"<boolean>\"\n        },\n        \"dolor_a\": {\n          \"equalTo\": \"<string>\",\n          \"caseInsensitive\": \"<boolean>\"\n        },\n        \"nulla_b10\": {\n          \"equalTo\": \"<string>\",\n          \"caseInsensitive\": \"<boolean>\"\n        }\n      },\n      \"bodyPatterns\": [\n        {\n          \"equalTo\": \"<string>\",\n          \"caseInsensitive\": \"<boolean>\"\n        },\n        {\n          \"equalTo\": \"<string>\",\n          \"caseInsensitive\": \"<boolean>\"\n        }\n      ]\n    }\n  ]\n}",
													"options": {
														"raw": {
															"headerFamily": "json",
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/__admin/requests/remove",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"__admin",
														"requests",
														"remove"
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"example\": {\n    \"requests\": [\n      {\n        \"url\": \"/my/url\",\n        \"absoluteUrl\": \"http://mydomain.com/my/url\",\n        \"method\": \"GET\",\n        \"headers\": {\n          \"Accept-Language\": \"en-us,en;q=0.5\",\n          \"User-Agent\": \"Mozilla/5.0 (Macintosh; Intel Mac OS X 10.6; rv:9.0) Gecko/20100101 Firefox/9.0\",\n          \"Accept\": \"image/png,image/*;q=0.8,*/*;q=0.5\"\n        },\n        \"body\": \"\",\n        \"browserProxyRequest\": true,\n        \"loggedDate\": 1339083581823,\n        \"loggedDateString\": \"2012-06-07 16:39:41\"\n      },\n      {\n        \"url\": \"/my/other/url\",\n        \"absoluteUrl\": \"http://my.other.domain.com/my/other/url\",\n        \"method\": \"POST\",\n        \"headers\": {\n          \"Accept\": \"text/plain\",\n          \"Content-Type\": \"text/plain\"\n        },\n        \"body\": \"My text\",\n        \"browserProxyRequest\": false,\n        \"loggedDate\": 1339083581823,\n        \"loggedDateString\": \"2012-06-07 16:39:41\"\n      }\n    ]\n  }\n}"
										}
									]
								}
							]
						},
						{
							"name": "remove-by-metadata",
							"item": [
								{
									"name": "Delete requests mappings matching metadata",
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"equalTo\": \"<string>\",\n  \"caseInsensitive\": \"<boolean>\"\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/__admin/requests/remove-by-metadata",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"__admin",
												"requests",
												"remove-by-metadata"
											]
										}
									},
									"response": [
										{
											"name": "Removed request details",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"equalTo\": \"<string>\",\n  \"caseInsensitive\": \"<boolean>\"\n}",
													"options": {
														"raw": {
															"headerFamily": "json",
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/__admin/requests/remove-by-metadata",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"__admin",
														"requests",
														"remove-by-metadata"
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"example\": {\n    \"requests\": [\n      {\n        \"url\": \"/my/url\",\n        \"absoluteUrl\": \"http://mydomain.com/my/url\",\n        \"method\": \"GET\",\n        \"headers\": {\n          \"Accept-Language\": \"en-us,en;q=0.5\",\n          \"User-Agent\": \"Mozilla/5.0 (Macintosh; Intel Mac OS X 10.6; rv:9.0) Gecko/20100101 Firefox/9.0\",\n          \"Accept\": \"image/png,image/*;q=0.8,*/*;q=0.5\"\n        },\n        \"body\": \"\",\n        \"browserProxyRequest\": true,\n        \"loggedDate\": 1339083581823,\n        \"loggedDateString\": \"2012-06-07 16:39:41\"\n      },\n      {\n        \"url\": \"/my/other/url\",\n        \"absoluteUrl\": \"http://my.other.domain.com/my/other/url\",\n        \"method\": \"POST\",\n        \"headers\": {\n          \"Accept\": \"text/plain\",\n          \"Content-Type\": \"text/plain\"\n        },\n        \"body\": \"My text\",\n        \"browserProxyRequest\": false,\n        \"loggedDate\": 1339083581823,\n        \"loggedDateString\": \"2012-06-07 16:39:41\"\n      }\n    ]\n  }\n}"
										}
									]
								}
							]
						},
						{
							"name": "find",
							"item": [
								{
									"name": "Find requests by criteria",
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"scheme\": \"http\",\n  \"host\": \"<string>\",\n  \"port\": \"<integer>\",\n  \"method\": \"VONWN\",\n  \"url\": \"<string>\",\n  \"urlPath\": \"<string>\",\n  \"urlPathPattern\": \"<string>\",\n  \"urlPattern\": \"<string>\",\n  \"pathParameters\": {\n    \"reprehenderitf\": {\n      \"equalTo\": \"<string>\",\n      \"caseInsensitive\": \"<boolean>\"\n    },\n    \"uta\": {\n      \"equalTo\": \"<string>\",\n      \"caseInsensitive\": \"<boolean>\"\n    },\n    \"nulla_ae\": {\n      \"equalTo\": \"<string>\",\n      \"caseInsensitive\": \"<boolean>\"\n    },\n    \"laborumde\": {\n      \"equalTo\": \"<string>\",\n      \"caseInsensitive\": \"<boolean>\"\n    }\n  },\n  \"queryParameters\": {\n    \"in19\": {\n      \"equalTo\": \"<string>\",\n      \"caseInsensitive\": \"<boolean>\"\n    },\n    \"exf1b\": {\n      \"equalTo\": \"<string>\",\n      \"caseInsensitive\": \"<boolean>\"\n    }\n  },\n  \"formParameters\": {\n    \"Excepteur66\": {\n      \"equalTo\": \"<string>\",\n      \"caseInsensitive\": \"<boolean>\"\n    }\n  },\n  \"headers\": {\n    \"ut_7b\": {\n      \"equalTo\": \"<string>\",\n      \"caseInsensitive\": \"<boolean>\"\n    }\n  },\n  \"basicAuthCredentials\": {\n    \"username\": \"<string>\",\n    \"password\": \"<string>\"\n  },\n  \"cookies\": {\n    \"ut_9af\": {\n      \"equalTo\": \"<string>\",\n      \"caseInsensitive\": \"<boolean>\"\n    },\n    \"consectetur5c\": {\n      \"equalTo\": \"<string>\",\n      \"caseInsensitive\": \"<boolean>\"\n    },\n    \"aute_1\": {\n      \"equalTo\": \"<string>\",\n      \"caseInsensitive\": \"<boolean>\"\n    },\n    \"nisi_16\": {\n      \"equalTo\": \"<string>\",\n      \"caseInsensitive\": \"<boolean>\"\n    },\n    \"sed_ce4\": {\n      \"equalTo\": \"<string>\",\n      \"caseInsensitive\": \"<boolean>\"\n    }\n  },\n  \"bodyPatterns\": [\n    {\n      \"equalTo\": \"<string>\",\n      \"caseInsensitive\": \"<boolean>\"\n    },\n    {\n      \"equalTo\": \"<string>\",\n      \"caseInsensitive\": \"<boolean>\"\n    }\n  ],\n  \"customMatcher\": {\n    \"name\": \"<string>\",\n    \"parameters\": {}\n  },\n  \"multipartPatterns\": [\n    {\n      \"name\": \"<string>\",\n      \"matchingType\": \"ANY\",\n      \"headers\": {\n        \"laboris_\": {\n          \"equalTo\": \"<string>\",\n          \"caseInsensitive\": \"<boolean>\"\n        },\n        \"adipisicingd\": {\n          \"equalTo\": \"<string>\",\n          \"caseInsensitive\": \"<boolean>\"\n        }\n      },\n      \"bodyPatterns\": [\n        {\n          \"equalTo\": \"<string>\",\n          \"caseInsensitive\": \"<boolean>\"\n        },\n        {\n          \"equalTo\": \"<string>\",\n          \"caseInsensitive\": \"<boolean>\"\n        }\n      ]\n    },\n    {\n      \"name\": \"<string>\",\n      \"matchingType\": \"ANY\",\n      \"headers\": {\n        \"qui_9\": {\n          \"equalTo\": \"<string>\",\n          \"caseInsensitive\": \"<boolean>\"\n        },\n        \"dolor_a\": {\n          \"equalTo\": \"<string>\",\n          \"caseInsensitive\": \"<boolean>\"\n        },\n        \"nulla_b10\": {\n          \"equalTo\": \"<string>\",\n          \"caseInsensitive\": \"<boolean>\"\n        }\n      },\n      \"bodyPatterns\": [\n        {\n          \"equalTo\": \"<string>\",\n          \"caseInsensitive\": \"<boolean>\"\n        },\n        {\n          \"equalTo\": \"<string>\",\n          \"caseInsensitive\": \"<boolean>\"\n        }\n      ]\n    }\n  ]\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/__admin/requests/find",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"__admin",
												"requests",
												"find"
											]
										},
										"description": "Retrieve details of requests logged in the journal matching the specified criteria"
									},
									"response": [
										{
											"name": "Matching request details",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"scheme\": \"http\",\n  \"host\": \"<string>\",\n  \"port\": \"<integer>\",\n  \"method\": \"VONWN\",\n  \"url\": \"<string>\",\n  \"urlPath\": \"<string>\",\n  \"urlPathPattern\": \"<string>\",\n  \"urlPattern\": \"<string>\",\n  \"pathParameters\": {\n    \"reprehenderitf\": {\n      \"equalTo\": \"<string>\",\n      \"caseInsensitive\": \"<boolean>\"\n    },\n    \"uta\": {\n      \"equalTo\": \"<string>\",\n      \"caseInsensitive\": \"<boolean>\"\n    },\n    \"nulla_ae\": {\n      \"equalTo\": \"<string>\",\n      \"caseInsensitive\": \"<boolean>\"\n    },\n    \"laborumde\": {\n      \"equalTo\": \"<string>\",\n      \"caseInsensitive\": \"<boolean>\"\n    }\n  },\n  \"queryParameters\": {\n    \"in19\": {\n      \"equalTo\": \"<string>\",\n      \"caseInsensitive\": \"<boolean>\"\n    },\n    \"exf1b\": {\n      \"equalTo\": \"<string>\",\n      \"caseInsensitive\": \"<boolean>\"\n    }\n  },\n  \"formParameters\": {\n    \"Excepteur66\": {\n      \"equalTo\": \"<string>\",\n      \"caseInsensitive\": \"<boolean>\"\n    }\n  },\n  \"headers\": {\n    \"ut_7b\": {\n      \"equalTo\": \"<string>\",\n      \"caseInsensitive\": \"<boolean>\"\n    }\n  },\n  \"basicAuthCredentials\": {\n    \"username\": \"<string>\",\n    \"password\": \"<string>\"\n  },\n  \"cookies\": {\n    \"ut_9af\": {\n      \"equalTo\": \"<string>\",\n      \"caseInsensitive\": \"<boolean>\"\n    },\n    \"consectetur5c\": {\n      \"equalTo\": \"<string>\",\n      \"caseInsensitive\": \"<boolean>\"\n    },\n    \"aute_1\": {\n      \"equalTo\": \"<string>\",\n      \"caseInsensitive\": \"<boolean>\"\n    },\n    \"nisi_16\": {\n      \"equalTo\": \"<string>\",\n      \"caseInsensitive\": \"<boolean>\"\n    },\n    \"sed_ce4\": {\n      \"equalTo\": \"<string>\",\n      \"caseInsensitive\": \"<boolean>\"\n    }\n  },\n  \"bodyPatterns\": [\n    {\n      \"equalTo\": \"<string>\",\n      \"caseInsensitive\": \"<boolean>\"\n    },\n    {\n      \"equalTo\": \"<string>\",\n      \"caseInsensitive\": \"<boolean>\"\n    }\n  ],\n  \"customMatcher\": {\n    \"name\": \"<string>\",\n    \"parameters\": {}\n  },\n  \"multipartPatterns\": [\n    {\n      \"name\": \"<string>\",\n      \"matchingType\": \"ANY\",\n      \"headers\": {\n        \"laboris_\": {\n          \"equalTo\": \"<string>\",\n          \"caseInsensitive\": \"<boolean>\"\n        },\n        \"adipisicingd\": {\n          \"equalTo\": \"<string>\",\n          \"caseInsensitive\": \"<boolean>\"\n        }\n      },\n      \"bodyPatterns\": [\n        {\n          \"equalTo\": \"<string>\",\n          \"caseInsensitive\": \"<boolean>\"\n        },\n        {\n          \"equalTo\": \"<string>\",\n          \"caseInsensitive\": \"<boolean>\"\n        }\n      ]\n    },\n    {\n      \"name\": \"<string>\",\n      \"matchingType\": \"ANY\",\n      \"headers\": {\n        \"qui_9\": {\n          \"equalTo\": \"<string>\",\n          \"caseInsensitive\": \"<boolean>\"\n        },\n        \"dolor_a\": {\n          \"equalTo\": \"<string>\",\n          \"caseInsensitive\": \"<boolean>\"\n        },\n        \"nulla_b10\": {\n          \"equalTo\": \"<string>\",\n          \"caseInsensitive\": \"<boolean>\"\n        }\n      },\n      \"bodyPatterns\": [\n        {\n          \"equalTo\": \"<string>\",\n          \"caseInsensitive\": \"<boolean>\"\n        },\n        {\n          \"equalTo\": \"<string>\",\n          \"caseInsensitive\": \"<boolean>\"\n        }\n      ]\n    }\n  ]\n}",
													"options": {
														"raw": {
															"headerFamily": "json",
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/__admin/requests/find",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"__admin",
														"requests",
														"find"
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"example\": {\n    \"requests\": [\n      {\n        \"url\": \"/my/url\",\n        \"absoluteUrl\": \"http://mydomain.com/my/url\",\n        \"method\": \"GET\",\n        \"headers\": {\n          \"Accept-Language\": \"en-us,en;q=0.5\",\n          \"User-Agent\": \"Mozilla/5.0 (Macintosh; Intel Mac OS X 10.6; rv:9.0) Gecko/20100101 Firefox/9.0\",\n          \"Accept\": \"image/png,image/*;q=0.8,*/*;q=0.5\"\n        },\n        \"body\": \"\",\n        \"browserProxyRequest\": true,\n        \"loggedDate\": 1339083581823,\n        \"loggedDateString\": \"2012-06-07 16:39:41\"\n      },\n      {\n        \"url\": \"/my/other/url\",\n        \"absoluteUrl\": \"http://my.other.domain.com/my/other/url\",\n        \"method\": \"POST\",\n        \"headers\": {\n          \"Accept\": \"text/plain\",\n          \"Content-Type\": \"text/plain\"\n        },\n        \"body\": \"My text\",\n        \"browserProxyRequest\": false,\n        \"loggedDate\": 1339083581823,\n        \"loggedDateString\": \"2012-06-07 16:39:41\"\n      }\n    ]\n  }\n}"
										}
									]
								}
							]
						},
						{
							"name": "unmatched",
							"item": [
								{
									"name": "near-misses",
									"item": [
										{
											"name": "retrieve Near Misses For Unmatched Requests",
											"request": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/__admin/requests/unmatched/near-misses",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"__admin",
														"requests",
														"unmatched",
														"near-misses"
													]
												},
												"description": "Retrieve near-misses for all unmatched requests"
											},
											"response": [
												{
													"name": "Near misses matching criteria",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/__admin/requests/unmatched/near-misses",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"__admin",
																"requests",
																"unmatched",
																"near-misses"
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"nearMisses\": [\n    {\n      \"method\": \"<string>\",\n      \"url\": \"<string>\",\n      \"absoluteUrl\": \"<string>\",\n      \"headers\": {},\n      \"cookies\": {},\n      \"body\": \"<string>\"\n    },\n    {\n      \"method\": \"<string>\",\n      \"url\": \"<string>\",\n      \"absoluteUrl\": \"<string>\",\n      \"headers\": {},\n      \"cookies\": {},\n      \"body\": \"<string>\"\n    }\n  ]\n}"
												}
											]
										}
									]
								},
								{
									"name": "Find unmatched requests",
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/__admin/requests/unmatched",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"__admin",
												"requests",
												"unmatched"
											]
										},
										"description": "Get details of logged requests that weren't matched by any stub mapping"
									},
									"response": [
										{
											"name": "Unmatched request details",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/__admin/requests/unmatched",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"__admin",
														"requests",
														"unmatched"
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"example\": {\n    \"requests\": [\n      {\n        \"url\": \"/my/url\",\n        \"absoluteUrl\": \"http://mydomain.com/my/url\",\n        \"method\": \"GET\",\n        \"headers\": {\n          \"Accept-Language\": \"en-us,en;q=0.5\",\n          \"User-Agent\": \"Mozilla/5.0 (Macintosh; Intel Mac OS X 10.6; rv:9.0) Gecko/20100101 Firefox/9.0\",\n          \"Accept\": \"image/png,image/*;q=0.8,*/*;q=0.5\"\n        },\n        \"body\": \"\",\n        \"browserProxyRequest\": true,\n        \"loggedDate\": 1339083581823,\n        \"loggedDateString\": \"2012-06-07 16:39:41\"\n      },\n      {\n        \"url\": \"/my/other/url\",\n        \"absoluteUrl\": \"http://my.other.domain.com/my/other/url\",\n        \"method\": \"POST\",\n        \"headers\": {\n          \"Accept\": \"text/plain\",\n          \"Content-Type\": \"text/plain\"\n        },\n        \"body\": \"My text\",\n        \"browserProxyRequest\": false,\n        \"loggedDate\": 1339083581823,\n        \"loggedDateString\": \"2012-06-07 16:39:41\"\n      }\n    ]\n  }\n}"
										}
									]
								}
							]
						},
						{
							"name": "Get all requests in journal",
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/__admin/requests?limit=<string>&since=<string>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"__admin",
										"requests"
									],
									"query": [
										{
											"key": "limit",
											"value": "<string>",
											"description": "The maximum number of results to return"
										},
										{
											"key": "since",
											"value": "<string>",
											"description": "Only return logged requests after this date"
										}
									]
								}
							},
							"response": [
								{
									"name": "List of received requests",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/__admin/requests?limit=<string>&since=<string>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"__admin",
												"requests"
											],
											"query": [
												{
													"key": "limit",
													"value": "<string>",
													"description": "The maximum number of results to return"
												},
												{
													"key": "since",
													"value": "<string>",
													"description": "Only return logged requests after this date"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"example\": {\n    \"requests\": [\n      {\n        \"request\": {\n          \"url\": \"/received-request/9\",\n          \"absoluteUrl\": \"http://localhost:56715/received-request/9\",\n          \"method\": \"GET\",\n          \"clientIp\": \"127.0.0.1\",\n          \"headers\": {\n            \"Connection\": \"keep-alive\",\n            \"Host\": \"localhost:56715\",\n            \"User-Agent\": \"Apache-HttpClient/4.5.1 (Java/1.7.0_51)\"\n          },\n          \"cookies\": {},\n          \"browserProxyRequest\": false,\n          \"loggedDate\": 1471442494809,\n          \"bodyAsBase64\": \"\",\n          \"body\": \"\",\n          \"loggedDateString\": \"2016-08-17T14:01:34Z\"\n        },\n        \"responseDefinition\": {\n          \"status\": 404,\n          \"transformers\": [],\n          \"fromConfiguredStub\": false,\n          \"transformerParameters\": {}\n        }\n      },\n      {\n        \"request\": {\n          \"url\": \"/received-request/8\",\n          \"absoluteUrl\": \"http://localhost:56715/received-request/8\",\n          \"method\": \"GET\",\n          \"clientIp\": \"127.0.0.1\",\n          \"headers\": {\n            \"Connection\": \"keep-alive\",\n            \"Host\": \"localhost:56715\",\n            \"User-Agent\": \"Apache-HttpClient/4.5.1 (Java/1.7.0_51)\"\n          },\n          \"cookies\": {},\n          \"browserProxyRequest\": false,\n          \"loggedDate\": 1471442494802,\n          \"bodyAsBase64\": \"\",\n          \"body\": \"\",\n          \"loggedDateString\": \"2016-08-17T14:01:34Z\"\n        },\n        \"responseDefinition\": {\n          \"status\": 404,\n          \"transformers\": [],\n          \"fromConfiguredStub\": false,\n          \"transformerParameters\": {}\n        }\n      },\n      {\n        \"request\": {\n          \"url\": \"/received-request/7\",\n          \"absoluteUrl\": \"http://localhost:56715/received-request/7\",\n          \"method\": \"GET\",\n          \"clientIp\": \"127.0.0.1\",\n          \"headers\": {\n            \"Connection\": \"keep-alive\",\n            \"Host\": \"localhost:56715\",\n            \"User-Agent\": \"Apache-HttpClient/4.5.1 (Java/1.7.0_51)\"\n          },\n          \"cookies\": {},\n          \"browserProxyRequest\": false,\n          \"loggedDate\": 1471442494795,\n          \"bodyAsBase64\": \"\",\n          \"body\": \"\",\n          \"loggedDateString\": \"2016-08-17T14:01:34Z\"\n        },\n        \"responseDefinition\": {\n          \"status\": 404,\n          \"transformers\": [],\n          \"fromConfiguredStub\": false,\n          \"transformerParameters\": {}\n        }\n      }\n    ],\n    \"meta\": {\n      \"total\": 9\n    },\n    \"requestJournalDisabled\": false\n  }\n}"
								}
							]
						},
						{
							"name": "Delete all requests in journal",
							"request": {
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/__admin/requests",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"__admin",
										"requests"
									]
								}
							},
							"response": [
								{
									"name": "Successfully deleted",
									"originalRequest": {
										"method": "DELETE",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/__admin/requests",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"__admin",
												"requests"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "text",
									"header": [],
									"cookie": [],
									"body": ""
								}
							]
						}
					]
				},
				{
					"name": "near-misses",
					"item": [
						{
							"name": "request",
							"item": [
								{
									"name": "Find near misses matching specific request",
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"method\": \"<string>\",\n  \"url\": \"<string>\",\n  \"absoluteUrl\": \"<string>\",\n  \"headers\": {},\n  \"cookies\": {},\n  \"body\": \"<string>\"\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/__admin/near-misses/request",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"__admin",
												"near-misses",
												"request"
											]
										},
										"description": "Find at most 3 near misses for closest stub mappings to the specified request"
									},
									"response": [
										{
											"name": "Near misses matching criteria",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"method\": \"<string>\",\n  \"url\": \"<string>\",\n  \"absoluteUrl\": \"<string>\",\n  \"headers\": {},\n  \"cookies\": {},\n  \"body\": \"<string>\"\n}",
													"options": {
														"raw": {
															"headerFamily": "json",
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/__admin/near-misses/request",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"__admin",
														"near-misses",
														"request"
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"nearMisses\": [\n    {\n      \"method\": \"<string>\",\n      \"url\": \"<string>\",\n      \"absoluteUrl\": \"<string>\",\n      \"headers\": {},\n      \"cookies\": {},\n      \"body\": \"<string>\"\n    },\n    {\n      \"method\": \"<string>\",\n      \"url\": \"<string>\",\n      \"absoluteUrl\": \"<string>\",\n      \"headers\": {},\n      \"cookies\": {},\n      \"body\": \"<string>\"\n    }\n  ]\n}"
										}
									]
								}
							]
						},
						{
							"name": "request-pattern",
							"item": [
								{
									"name": "Find near misses matching request pattern",
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"scheme\": \"http\",\n  \"host\": \"<string>\",\n  \"port\": \"<integer>\",\n  \"method\": \"VONWN\",\n  \"url\": \"<string>\",\n  \"urlPath\": \"<string>\",\n  \"urlPathPattern\": \"<string>\",\n  \"urlPattern\": \"<string>\",\n  \"pathParameters\": {\n    \"reprehenderitf\": {\n      \"equalTo\": \"<string>\",\n      \"caseInsensitive\": \"<boolean>\"\n    },\n    \"uta\": {\n      \"equalTo\": \"<string>\",\n      \"caseInsensitive\": \"<boolean>\"\n    },\n    \"nulla_ae\": {\n      \"equalTo\": \"<string>\",\n      \"caseInsensitive\": \"<boolean>\"\n    },\n    \"laborumde\": {\n      \"equalTo\": \"<string>\",\n      \"caseInsensitive\": \"<boolean>\"\n    }\n  },\n  \"queryParameters\": {\n    \"in19\": {\n      \"equalTo\": \"<string>\",\n      \"caseInsensitive\": \"<boolean>\"\n    },\n    \"exf1b\": {\n      \"equalTo\": \"<string>\",\n      \"caseInsensitive\": \"<boolean>\"\n    }\n  },\n  \"formParameters\": {\n    \"Excepteur66\": {\n      \"equalTo\": \"<string>\",\n      \"caseInsensitive\": \"<boolean>\"\n    }\n  },\n  \"headers\": {\n    \"ut_7b\": {\n      \"equalTo\": \"<string>\",\n      \"caseInsensitive\": \"<boolean>\"\n    }\n  },\n  \"basicAuthCredentials\": {\n    \"username\": \"<string>\",\n    \"password\": \"<string>\"\n  },\n  \"cookies\": {\n    \"ut_9af\": {\n      \"equalTo\": \"<string>\",\n      \"caseInsensitive\": \"<boolean>\"\n    },\n    \"consectetur5c\": {\n      \"equalTo\": \"<string>\",\n      \"caseInsensitive\": \"<boolean>\"\n    },\n    \"aute_1\": {\n      \"equalTo\": \"<string>\",\n      \"caseInsensitive\": \"<boolean>\"\n    },\n    \"nisi_16\": {\n      \"equalTo\": \"<string>\",\n      \"caseInsensitive\": \"<boolean>\"\n    },\n    \"sed_ce4\": {\n      \"equalTo\": \"<string>\",\n      \"caseInsensitive\": \"<boolean>\"\n    }\n  },\n  \"bodyPatterns\": [\n    {\n      \"equalTo\": \"<string>\",\n      \"caseInsensitive\": \"<boolean>\"\n    },\n    {\n      \"equalTo\": \"<string>\",\n      \"caseInsensitive\": \"<boolean>\"\n    }\n  ],\n  \"customMatcher\": {\n    \"name\": \"<string>\",\n    \"parameters\": {}\n  },\n  \"multipartPatterns\": [\n    {\n      \"name\": \"<string>\",\n      \"matchingType\": \"ANY\",\n      \"headers\": {\n        \"laboris_\": {\n          \"equalTo\": \"<string>\",\n          \"caseInsensitive\": \"<boolean>\"\n        },\n        \"adipisicingd\": {\n          \"equalTo\": \"<string>\",\n          \"caseInsensitive\": \"<boolean>\"\n        }\n      },\n      \"bodyPatterns\": [\n        {\n          \"equalTo\": \"<string>\",\n          \"caseInsensitive\": \"<boolean>\"\n        },\n        {\n          \"equalTo\": \"<string>\",\n          \"caseInsensitive\": \"<boolean>\"\n        }\n      ]\n    },\n    {\n      \"name\": \"<string>\",\n      \"matchingType\": \"ANY\",\n      \"headers\": {\n        \"qui_9\": {\n          \"equalTo\": \"<string>\",\n          \"caseInsensitive\": \"<boolean>\"\n        },\n        \"dolor_a\": {\n          \"equalTo\": \"<string>\",\n          \"caseInsensitive\": \"<boolean>\"\n        },\n        \"nulla_b10\": {\n          \"equalTo\": \"<string>\",\n          \"caseInsensitive\": \"<boolean>\"\n        }\n      },\n      \"bodyPatterns\": [\n        {\n          \"equalTo\": \"<string>\",\n          \"caseInsensitive\": \"<boolean>\"\n        },\n        {\n          \"equalTo\": \"<string>\",\n          \"caseInsensitive\": \"<boolean>\"\n        }\n      ]\n    }\n  ]\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/__admin/near-misses/request-pattern",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"__admin",
												"near-misses",
												"request-pattern"
											]
										},
										"description": "Find at most 3 near misses for closest logged requests to the specified request pattern"
									},
									"response": [
										{
											"name": "Near misses matching criteria",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"scheme\": \"http\",\n  \"host\": \"<string>\",\n  \"port\": \"<integer>\",\n  \"method\": \"VONWN\",\n  \"url\": \"<string>\",\n  \"urlPath\": \"<string>\",\n  \"urlPathPattern\": \"<string>\",\n  \"urlPattern\": \"<string>\",\n  \"pathParameters\": {\n    \"reprehenderitf\": {\n      \"equalTo\": \"<string>\",\n      \"caseInsensitive\": \"<boolean>\"\n    },\n    \"uta\": {\n      \"equalTo\": \"<string>\",\n      \"caseInsensitive\": \"<boolean>\"\n    },\n    \"nulla_ae\": {\n      \"equalTo\": \"<string>\",\n      \"caseInsensitive\": \"<boolean>\"\n    },\n    \"laborumde\": {\n      \"equalTo\": \"<string>\",\n      \"caseInsensitive\": \"<boolean>\"\n    }\n  },\n  \"queryParameters\": {\n    \"in19\": {\n      \"equalTo\": \"<string>\",\n      \"caseInsensitive\": \"<boolean>\"\n    },\n    \"exf1b\": {\n      \"equalTo\": \"<string>\",\n      \"caseInsensitive\": \"<boolean>\"\n    }\n  },\n  \"formParameters\": {\n    \"Excepteur66\": {\n      \"equalTo\": \"<string>\",\n      \"caseInsensitive\": \"<boolean>\"\n    }\n  },\n  \"headers\": {\n    \"ut_7b\": {\n      \"equalTo\": \"<string>\",\n      \"caseInsensitive\": \"<boolean>\"\n    }\n  },\n  \"basicAuthCredentials\": {\n    \"username\": \"<string>\",\n    \"password\": \"<string>\"\n  },\n  \"cookies\": {\n    \"ut_9af\": {\n      \"equalTo\": \"<string>\",\n      \"caseInsensitive\": \"<boolean>\"\n    },\n    \"consectetur5c\": {\n      \"equalTo\": \"<string>\",\n      \"caseInsensitive\": \"<boolean>\"\n    },\n    \"aute_1\": {\n      \"equalTo\": \"<string>\",\n      \"caseInsensitive\": \"<boolean>\"\n    },\n    \"nisi_16\": {\n      \"equalTo\": \"<string>\",\n      \"caseInsensitive\": \"<boolean>\"\n    },\n    \"sed_ce4\": {\n      \"equalTo\": \"<string>\",\n      \"caseInsensitive\": \"<boolean>\"\n    }\n  },\n  \"bodyPatterns\": [\n    {\n      \"equalTo\": \"<string>\",\n      \"caseInsensitive\": \"<boolean>\"\n    },\n    {\n      \"equalTo\": \"<string>\",\n      \"caseInsensitive\": \"<boolean>\"\n    }\n  ],\n  \"customMatcher\": {\n    \"name\": \"<string>\",\n    \"parameters\": {}\n  },\n  \"multipartPatterns\": [\n    {\n      \"name\": \"<string>\",\n      \"matchingType\": \"ANY\",\n      \"headers\": {\n        \"laboris_\": {\n          \"equalTo\": \"<string>\",\n          \"caseInsensitive\": \"<boolean>\"\n        },\n        \"adipisicingd\": {\n          \"equalTo\": \"<string>\",\n          \"caseInsensitive\": \"<boolean>\"\n        }\n      },\n      \"bodyPatterns\": [\n        {\n          \"equalTo\": \"<string>\",\n          \"caseInsensitive\": \"<boolean>\"\n        },\n        {\n          \"equalTo\": \"<string>\",\n          \"caseInsensitive\": \"<boolean>\"\n        }\n      ]\n    },\n    {\n      \"name\": \"<string>\",\n      \"matchingType\": \"ANY\",\n      \"headers\": {\n        \"qui_9\": {\n          \"equalTo\": \"<string>\",\n          \"caseInsensitive\": \"<boolean>\"\n        },\n        \"dolor_a\": {\n          \"equalTo\": \"<string>\",\n          \"caseInsensitive\": \"<boolean>\"\n        },\n        \"nulla_b10\": {\n          \"equalTo\": \"<string>\",\n          \"caseInsensitive\": \"<boolean>\"\n        }\n      },\n      \"bodyPatterns\": [\n        {\n          \"equalTo\": \"<string>\",\n          \"caseInsensitive\": \"<boolean>\"\n        },\n        {\n          \"equalTo\": \"<string>\",\n          \"caseInsensitive\": \"<boolean>\"\n        }\n      ]\n    }\n  ]\n}",
													"options": {
														"raw": {
															"headerFamily": "json",
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/__admin/near-misses/request-pattern",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"__admin",
														"near-misses",
														"request-pattern"
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"nearMisses\": [\n    {\n      \"method\": \"<string>\",\n      \"url\": \"<string>\",\n      \"absoluteUrl\": \"<string>\",\n      \"headers\": {},\n      \"cookies\": {},\n      \"body\": \"<string>\"\n    },\n    {\n      \"method\": \"<string>\",\n      \"url\": \"<string>\",\n      \"absoluteUrl\": \"<string>\",\n      \"headers\": {},\n      \"cookies\": {},\n      \"body\": \"<string>\"\n    }\n  ]\n}"
										}
									]
								}
							]
						}
					]
				},
				{
					"name": "recordings",
					"item": [
						{
							"name": "start",
							"item": [
								{
									"name": "Start recording",
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"captureHeaders\": {\n    \"dolora7\": {\n      \"caseInsensitive\": \"<boolean>\"\n    },\n    \"dolorc_5\": {\n      \"caseInsensitive\": \"<boolean>\"\n    }\n  },\n  \"extractBodyCriteria\": {\n    \"binarySizeThreshold\": \"0\",\n    \"textSizeThreshold\": \"0\"\n  },\n  \"persist\": true,\n  \"repeatsAsScenarios\": true,\n  \"requestBodyPattern\": {\n    \"caseInsensitive\": false,\n    \"ignoreArrayOrder\": true,\n    \"ignoreExtraElements\": true,\n    \"matcher\": \"auto\"\n  },\n  \"transformerParameters\": {},\n  \"transformers\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"filters\": {\n    \"scheme\": \"http\",\n    \"host\": \"<string>\",\n    \"port\": \"<integer>\",\n    \"method\": \"XVLUPZCM\",\n    \"url\": \"<string>\",\n    \"urlPath\": \"<string>\",\n    \"urlPathPattern\": \"<string>\",\n    \"urlPattern\": \"<string>\",\n    \"pathParameters\": {\n      \"deserunt_34c\": {\n        \"equalTo\": \"<string>\",\n        \"caseInsensitive\": \"<boolean>\"\n      },\n      \"eiusmod_933\": {\n        \"equalTo\": \"<string>\",\n        \"caseInsensitive\": \"<boolean>\"\n      }\n    },\n    \"queryParameters\": {\n      \"dolorc\": {\n        \"equalTo\": \"<string>\",\n        \"caseInsensitive\": \"<boolean>\"\n      },\n      \"do3ae\": {\n        \"equalTo\": \"<string>\",\n        \"caseInsensitive\": \"<boolean>\"\n      }\n    },\n    \"formParameters\": {\n      \"id_31\": {\n        \"equalTo\": \"<string>\",\n        \"caseInsensitive\": \"<boolean>\"\n      }\n    },\n    \"headers\": {\n      \"reprehenderit_006\": {\n        \"equalTo\": \"<string>\",\n        \"caseInsensitive\": \"<boolean>\"\n      },\n      \"officia9\": {\n        \"equalTo\": \"<string>\",\n        \"caseInsensitive\": \"<boolean>\"\n      },\n      \"esse5\": {\n        \"equalTo\": \"<string>\",\n        \"caseInsensitive\": \"<boolean>\"\n      }\n    },\n    \"basicAuthCredentials\": {\n      \"username\": \"<string>\",\n      \"password\": \"<string>\"\n    },\n    \"cookies\": {\n      \"temporbe\": {\n        \"equalTo\": \"<string>\",\n        \"caseInsensitive\": \"<boolean>\"\n      }\n    },\n    \"bodyPatterns\": [\n      {\n        \"equalTo\": \"<string>\",\n        \"caseInsensitive\": \"<boolean>\"\n      },\n      {\n        \"equalTo\": \"<string>\",\n        \"caseInsensitive\": \"<boolean>\"\n      }\n    ],\n    \"customMatcher\": {\n      \"name\": \"<string>\",\n      \"parameters\": {}\n    },\n    \"multipartPatterns\": [\n      {\n        \"name\": \"<string>\",\n        \"matchingType\": \"ANY\",\n        \"headers\": {\n          \"dolor_a\": {\n            \"equalTo\": \"<string>\",\n            \"caseInsensitive\": \"<boolean>\"\n          },\n          \"dolore_91a\": {\n            \"equalTo\": \"<string>\",\n            \"caseInsensitive\": \"<boolean>\"\n          },\n          \"elit9\": {\n            \"equalTo\": \"<string>\",\n            \"caseInsensitive\": \"<boolean>\"\n          },\n          \"id0\": {\n            \"equalTo\": \"<string>\",\n            \"caseInsensitive\": \"<boolean>\"\n          }\n        },\n        \"bodyPatterns\": [\n          {\n            \"equalTo\": \"<string>\",\n            \"caseInsensitive\": \"<boolean>\"\n          },\n          {\n            \"equalTo\": \"<string>\",\n            \"caseInsensitive\": \"<boolean>\"\n          }\n        ]\n      },\n      {\n        \"name\": \"<string>\",\n        \"matchingType\": \"ANY\",\n        \"headers\": {\n          \"qui8_\": {\n            \"equalTo\": \"<string>\",\n            \"caseInsensitive\": \"<boolean>\"\n          },\n          \"Ut1d\": {\n            \"equalTo\": \"<string>\",\n            \"caseInsensitive\": \"<boolean>\"\n          },\n          \"ex4c\": {\n            \"equalTo\": \"<string>\",\n            \"caseInsensitive\": \"<boolean>\"\n          },\n          \"esse1\": {\n            \"equalTo\": \"<string>\",\n            \"caseInsensitive\": \"<boolean>\"\n          }\n        },\n        \"bodyPatterns\": [\n          {\n            \"equalTo\": \"<string>\",\n            \"caseInsensitive\": \"<boolean>\"\n          },\n          {\n            \"equalTo\": \"<string>\",\n            \"caseInsensitive\": \"<boolean>\"\n          }\n        ]\n      }\n    ]\n  },\n  \"targetBaseUrl\": \"<string>\"\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/__admin/recordings/start",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"__admin",
												"recordings",
												"start"
											]
										},
										"description": "Begin recording stub mappings"
									},
									"response": [
										{
											"name": "Successfully started recording",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"captureHeaders\": {\n    \"dolora7\": {\n      \"caseInsensitive\": \"<boolean>\"\n    },\n    \"dolorc_5\": {\n      \"caseInsensitive\": \"<boolean>\"\n    }\n  },\n  \"extractBodyCriteria\": {\n    \"binarySizeThreshold\": \"0\",\n    \"textSizeThreshold\": \"0\"\n  },\n  \"persist\": true,\n  \"repeatsAsScenarios\": true,\n  \"requestBodyPattern\": {\n    \"caseInsensitive\": false,\n    \"ignoreArrayOrder\": true,\n    \"ignoreExtraElements\": true,\n    \"matcher\": \"auto\"\n  },\n  \"transformerParameters\": {},\n  \"transformers\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"filters\": {\n    \"scheme\": \"http\",\n    \"host\": \"<string>\",\n    \"port\": \"<integer>\",\n    \"method\": \"XVLUPZCM\",\n    \"url\": \"<string>\",\n    \"urlPath\": \"<string>\",\n    \"urlPathPattern\": \"<string>\",\n    \"urlPattern\": \"<string>\",\n    \"pathParameters\": {\n      \"deserunt_34c\": {\n        \"equalTo\": \"<string>\",\n        \"caseInsensitive\": \"<boolean>\"\n      },\n      \"eiusmod_933\": {\n        \"equalTo\": \"<string>\",\n        \"caseInsensitive\": \"<boolean>\"\n      }\n    },\n    \"queryParameters\": {\n      \"dolorc\": {\n        \"equalTo\": \"<string>\",\n        \"caseInsensitive\": \"<boolean>\"\n      },\n      \"do3ae\": {\n        \"equalTo\": \"<string>\",\n        \"caseInsensitive\": \"<boolean>\"\n      }\n    },\n    \"formParameters\": {\n      \"id_31\": {\n        \"equalTo\": \"<string>\",\n        \"caseInsensitive\": \"<boolean>\"\n      }\n    },\n    \"headers\": {\n      \"reprehenderit_006\": {\n        \"equalTo\": \"<string>\",\n        \"caseInsensitive\": \"<boolean>\"\n      },\n      \"officia9\": {\n        \"equalTo\": \"<string>\",\n        \"caseInsensitive\": \"<boolean>\"\n      },\n      \"esse5\": {\n        \"equalTo\": \"<string>\",\n        \"caseInsensitive\": \"<boolean>\"\n      }\n    },\n    \"basicAuthCredentials\": {\n      \"username\": \"<string>\",\n      \"password\": \"<string>\"\n    },\n    \"cookies\": {\n      \"temporbe\": {\n        \"equalTo\": \"<string>\",\n        \"caseInsensitive\": \"<boolean>\"\n      }\n    },\n    \"bodyPatterns\": [\n      {\n        \"equalTo\": \"<string>\",\n        \"caseInsensitive\": \"<boolean>\"\n      },\n      {\n        \"equalTo\": \"<string>\",\n        \"caseInsensitive\": \"<boolean>\"\n      }\n    ],\n    \"customMatcher\": {\n      \"name\": \"<string>\",\n      \"parameters\": {}\n    },\n    \"multipartPatterns\": [\n      {\n        \"name\": \"<string>\",\n        \"matchingType\": \"ANY\",\n        \"headers\": {\n          \"dolor_a\": {\n            \"equalTo\": \"<string>\",\n            \"caseInsensitive\": \"<boolean>\"\n          },\n          \"dolore_91a\": {\n            \"equalTo\": \"<string>\",\n            \"caseInsensitive\": \"<boolean>\"\n          },\n          \"elit9\": {\n            \"equalTo\": \"<string>\",\n            \"caseInsensitive\": \"<boolean>\"\n          },\n          \"id0\": {\n            \"equalTo\": \"<string>\",\n            \"caseInsensitive\": \"<boolean>\"\n          }\n        },\n        \"bodyPatterns\": [\n          {\n            \"equalTo\": \"<string>\",\n            \"caseInsensitive\": \"<boolean>\"\n          },\n          {\n            \"equalTo\": \"<string>\",\n            \"caseInsensitive\": \"<boolean>\"\n          }\n        ]\n      },\n      {\n        \"name\": \"<string>\",\n        \"matchingType\": \"ANY\",\n        \"headers\": {\n          \"qui8_\": {\n            \"equalTo\": \"<string>\",\n            \"caseInsensitive\": \"<boolean>\"\n          },\n          \"Ut1d\": {\n            \"equalTo\": \"<string>\",\n            \"caseInsensitive\": \"<boolean>\"\n          },\n          \"ex4c\": {\n            \"equalTo\": \"<string>\",\n            \"caseInsensitive\": \"<boolean>\"\n          },\n          \"esse1\": {\n            \"equalTo\": \"<string>\",\n            \"caseInsensitive\": \"<boolean>\"\n          }\n        },\n        \"bodyPatterns\": [\n          {\n            \"equalTo\": \"<string>\",\n            \"caseInsensitive\": \"<boolean>\"\n          },\n          {\n            \"equalTo\": \"<string>\",\n            \"caseInsensitive\": \"<boolean>\"\n          }\n        ]\n      }\n    ]\n  },\n  \"targetBaseUrl\": \"<string>\"\n}",
													"options": {
														"raw": {
															"headerFamily": "json",
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/__admin/recordings/start",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"__admin",
														"recordings",
														"start"
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "text",
											"header": [],
											"cookie": [],
											"body": ""
										}
									]
								}
							]
						},
						{
							"name": "stop",
							"item": [
								{
									"name": "Stop recording",
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/__admin/recordings/stop",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"__admin",
												"recordings",
												"stop"
											]
										},
										"description": "End recording of stub mappings"
									},
									"response": [
										{
											"name": "Successfully stopped recording",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/__admin/recordings/stop",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"__admin",
														"recordings",
														"stop"
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"mappings\": [\n    {\n      \"id\": \"<string>\",\n      \"uuid\": \"<string>\",\n      \"name\": \"<string>\",\n      \"request\": {\n        \"scheme\": \"https\",\n        \"host\": \"<string>\",\n        \"port\": \"<integer>\",\n        \"method\": \"UBIWGISMNV\",\n        \"url\": \"<string>\",\n        \"urlPath\": \"<string>\",\n        \"urlPathPattern\": \"<string>\",\n        \"urlPattern\": \"<string>\",\n        \"pathParameters\": {\n          \"non_9_f\": {\n            \"equalTo\": \"<string>\",\n            \"caseInsensitive\": \"<boolean>\"\n          },\n          \"officia_6\": {\n            \"equalTo\": \"<string>\",\n            \"caseInsensitive\": \"<boolean>\"\n          }\n        },\n        \"queryParameters\": {\n          \"cupidatat5_\": {\n            \"equalTo\": \"<string>\",\n            \"caseInsensitive\": \"<boolean>\"\n          }\n        },\n        \"formParameters\": {\n          \"Duis9\": {\n            \"equalTo\": \"<string>\",\n            \"caseInsensitive\": \"<boolean>\"\n          },\n          \"Ut4\": {\n            \"equalTo\": \"<string>\",\n            \"caseInsensitive\": \"<boolean>\"\n          },\n          \"nostrud_3\": {\n            \"equalTo\": \"<string>\",\n            \"caseInsensitive\": \"<boolean>\"\n          }\n        },\n        \"headers\": {\n          \"in__f\": {\n            \"equalTo\": \"<string>\",\n            \"caseInsensitive\": \"<boolean>\"\n          },\n          \"anim_9\": {\n            \"equalTo\": \"<string>\",\n            \"caseInsensitive\": \"<boolean>\"\n          }\n        },\n        \"basicAuthCredentials\": {\n          \"username\": \"<string>\",\n          \"password\": \"<string>\"\n        },\n        \"cookies\": {\n          \"sed_da\": {\n            \"equalTo\": \"<string>\",\n            \"caseInsensitive\": \"<boolean>\"\n          },\n          \"sit95\": {\n            \"equalTo\": \"<string>\",\n            \"caseInsensitive\": \"<boolean>\"\n          },\n          \"ea_9b\": {\n            \"equalTo\": \"<string>\",\n            \"caseInsensitive\": \"<boolean>\"\n          }\n        },\n        \"bodyPatterns\": [\n          {\n            \"equalTo\": \"<string>\",\n            \"caseInsensitive\": \"<boolean>\"\n          },\n          {\n            \"equalTo\": \"<string>\",\n            \"caseInsensitive\": \"<boolean>\"\n          }\n        ],\n        \"customMatcher\": {\n          \"name\": \"<string>\",\n          \"parameters\": {}\n        },\n        \"multipartPatterns\": [\n          {\n            \"name\": \"<string>\",\n            \"matchingType\": \"ANY\",\n            \"headers\": {\n              \"Duis_2\": {\n                \"equalTo\": \"<string>\",\n                \"caseInsensitive\": \"<boolean>\"\n              },\n              \"commodo7\": {\n                \"equalTo\": \"<string>\",\n                \"caseInsensitive\": \"<boolean>\"\n              }\n            },\n            \"bodyPatterns\": [\n              {\n                \"equalTo\": \"<string>\",\n                \"caseInsensitive\": \"<boolean>\"\n              },\n              {\n                \"equalTo\": \"<string>\",\n                \"caseInsensitive\": \"<boolean>\"\n              }\n            ]\n          },\n          {\n            \"name\": \"<string>\",\n            \"matchingType\": \"ANY\",\n            \"headers\": {\n              \"in12f\": {\n                \"equalTo\": \"<string>\",\n                \"caseInsensitive\": \"<boolean>\"\n              }\n            },\n            \"bodyPatterns\": [\n              {\n                \"equalTo\": \"<string>\",\n                \"caseInsensitive\": \"<boolean>\"\n              },\n              {\n                \"equalTo\": \"<string>\",\n                \"caseInsensitive\": \"<boolean>\"\n              }\n            ]\n          }\n        ]\n      },\n      \"response\": {\n        \"status\": \"<integer>\",\n        \"statusMessage\": \"<string>\",\n        \"headers\": {\n          \"irureba1\": \"<string>\",\n          \"adipisicing__8_\": \"<string>\"\n        },\n        \"additionalProxyRequestHeaders\": {\n          \"deserunt_d4\": \"<string>\",\n          \"sunta\": \"<string>\",\n          \"dolor_89\": \"<string>\"\n        },\n        \"removeProxyRequestHeaders\": [\n          \"<string>\",\n          \"<string>\"\n        ],\n        \"body\": \"<string>\",\n        \"base64Body\": \"80UqT+e5LJ==\",\n        \"jsonBody\": {},\n        \"bodyFileName\": \"<string>\",\n        \"fault\": \"RANDOM_DATA_THEN_CLOSE\",\n        \"fixedDelayMilliseconds\": \"<integer>\",\n        \"delayDistribution\": {\n          \"median\": \"<integer>\",\n          \"sigma\": \"<number>\",\n          \"type\": \"lognormal\"\n        },\n        \"chunkedDribbleDelay\": {\n          \"numberOfChunks\": \"<integer>\",\n          \"totalDuration\": \"<integer>\"\n        },\n        \"fromConfiguredStub\": \"<boolean>\",\n        \"proxyBaseUrl\": \"<string>\",\n        \"proxyUrlPrefixToRemove\": \"<string>\",\n        \"transformerParameters\": {},\n        \"transformers\": [\n          \"<string>\",\n          \"<string>\"\n        ]\n      },\n      \"persistent\": \"<boolean>\",\n      \"priority\": \"<integer>\",\n      \"scenarioName\": \"<string>\",\n      \"requiredScenarioState\": \"<string>\",\n      \"newScenarioState\": \"<string>\",\n      \"postServeActions\": {},\n      \"serveEventListeners\": [\n        {\n          \"name\": \"<string>\",\n          \"requestPhases\": [\n            \"AFTER_COMPLETE\",\n            \"BEFORE_MATCH\"\n          ],\n          \"parameters\": {}\n        },\n        {\n          \"name\": \"<string>\",\n          \"requestPhases\": [\n            \"BEFORE_RESPONSE_SENT\",\n            \"BEFORE_MATCH\"\n          ],\n          \"parameters\": {}\n        }\n      ],\n      \"metadata\": {}\n    },\n    {\n      \"id\": \"<string>\",\n      \"uuid\": \"<string>\",\n      \"name\": \"<string>\",\n      \"request\": {\n        \"scheme\": \"http\",\n        \"host\": \"<string>\",\n        \"port\": \"<integer>\",\n        \"method\": \"YKMWL\",\n        \"url\": \"<string>\",\n        \"urlPath\": \"<string>\",\n        \"urlPathPattern\": \"<string>\",\n        \"urlPattern\": \"<string>\",\n        \"pathParameters\": {\n          \"sed_ef\": {\n            \"equalTo\": \"<string>\",\n            \"caseInsensitive\": \"<boolean>\"\n          },\n          \"aute_c07\": {\n            \"equalTo\": \"<string>\",\n            \"caseInsensitive\": \"<boolean>\"\n          }\n        },\n        \"queryParameters\": {\n          \"ex3\": {\n            \"equalTo\": \"<string>\",\n            \"caseInsensitive\": \"<boolean>\"\n          },\n          \"pariaturd99\": {\n            \"equalTo\": \"<string>\",\n            \"caseInsensitive\": \"<boolean>\"\n          }\n        },\n        \"formParameters\": {\n          \"amet_97\": {\n            \"equalTo\": \"<string>\",\n            \"caseInsensitive\": \"<boolean>\"\n          },\n          \"magna9\": {\n            \"equalTo\": \"<string>\",\n            \"caseInsensitive\": \"<boolean>\"\n          },\n          \"velit_884\": {\n            \"equalTo\": \"<string>\",\n            \"caseInsensitive\": \"<boolean>\"\n          },\n          \"veniam_6\": {\n            \"equalTo\": \"<string>\",\n            \"caseInsensitive\": \"<boolean>\"\n          }\n        },\n        \"headers\": {\n          \"uta\": {\n            \"equalTo\": \"<string>\",\n            \"caseInsensitive\": \"<boolean>\"\n          },\n          \"consectetur_9\": {\n            \"equalTo\": \"<string>\",\n            \"caseInsensitive\": \"<boolean>\"\n          },\n          \"in1ab\": {\n            \"equalTo\": \"<string>\",\n            \"caseInsensitive\": \"<boolean>\"\n          },\n          \"nisi_4\": {\n            \"equalTo\": \"<string>\",\n            \"caseInsensitive\": \"<boolean>\"\n          }\n        },\n        \"basicAuthCredentials\": {\n          \"username\": \"<string>\",\n          \"password\": \"<string>\"\n        },\n        \"cookies\": {\n          \"ullamco_d\": {\n            \"equalTo\": \"<string>\",\n            \"caseInsensitive\": \"<boolean>\"\n          }\n        },\n        \"bodyPatterns\": [\n          {\n            \"equalTo\": \"<string>\",\n            \"caseInsensitive\": \"<boolean>\"\n          },\n          {\n            \"equalTo\": \"<string>\",\n            \"caseInsensitive\": \"<boolean>\"\n          }\n        ],\n        \"customMatcher\": {\n          \"name\": \"<string>\",\n          \"parameters\": {}\n        },\n        \"multipartPatterns\": [\n          {\n            \"name\": \"<string>\",\n            \"matchingType\": \"ANY\",\n            \"headers\": {\n              \"mollitba\": {\n                \"equalTo\": \"<string>\",\n                \"caseInsensitive\": \"<boolean>\"\n              }\n            },\n            \"bodyPatterns\": [\n              {\n                \"equalTo\": \"<string>\",\n                \"caseInsensitive\": \"<boolean>\"\n              },\n              {\n                \"equalTo\": \"<string>\",\n                \"caseInsensitive\": \"<boolean>\"\n              }\n            ]\n          },\n          {\n            \"name\": \"<string>\",\n            \"matchingType\": \"ANY\",\n            \"headers\": {\n              \"dolor_73\": {\n                \"equalTo\": \"<string>\",\n                \"caseInsensitive\": \"<boolean>\"\n              },\n              \"velit_6f_\": {\n                \"equalTo\": \"<string>\",\n                \"caseInsensitive\": \"<boolean>\"\n              }\n            },\n            \"bodyPatterns\": [\n              {\n                \"equalTo\": \"<string>\",\n                \"caseInsensitive\": \"<boolean>\"\n              },\n              {\n                \"equalTo\": \"<string>\",\n                \"caseInsensitive\": \"<boolean>\"\n              }\n            ]\n          }\n        ]\n      },\n      \"response\": {\n        \"status\": \"<integer>\",\n        \"statusMessage\": \"<string>\",\n        \"headers\": {\n          \"cillum_3f\": \"<string>\"\n        },\n        \"additionalProxyRequestHeaders\": {\n          \"et2f1\": \"<string>\"\n        },\n        \"removeProxyRequestHeaders\": [\n          \"<string>\",\n          \"<string>\"\n        ],\n        \"body\": \"<string>\",\n        \"base64Body\": \"p0zaShhaVf==\",\n        \"jsonBody\": {},\n        \"bodyFileName\": \"<string>\",\n        \"fault\": \"RANDOM_DATA_THEN_CLOSE\",\n        \"fixedDelayMilliseconds\": \"<integer>\",\n        \"delayDistribution\": {\n          \"median\": \"<integer>\",\n          \"sigma\": \"<number>\",\n          \"type\": \"lognormal\"\n        },\n        \"chunkedDribbleDelay\": {\n          \"numberOfChunks\": \"<integer>\",\n          \"totalDuration\": \"<integer>\"\n        },\n        \"fromConfiguredStub\": \"<boolean>\",\n        \"proxyBaseUrl\": \"<string>\",\n        \"proxyUrlPrefixToRemove\": \"<string>\",\n        \"transformerParameters\": {},\n        \"transformers\": [\n          \"<string>\",\n          \"<string>\"\n        ]\n      },\n      \"persistent\": \"<boolean>\",\n      \"priority\": \"<integer>\",\n      \"scenarioName\": \"<string>\",\n      \"requiredScenarioState\": \"<string>\",\n      \"newScenarioState\": \"<string>\",\n      \"postServeActions\": {},\n      \"serveEventListeners\": [\n        {\n          \"name\": \"<string>\",\n          \"requestPhases\": [\n            \"BEFORE_RESPONSE_SENT\",\n            \"BEFORE_MATCH\"\n          ],\n          \"parameters\": {}\n        },\n        {\n          \"name\": \"<string>\",\n          \"requestPhases\": [\n            \"AFTER_MATCH\",\n            \"AFTER_MATCH\"\n          ],\n          \"parameters\": {}\n        }\n      ],\n      \"metadata\": {}\n    }\n  ],\n  \"meta\": {\n    \"total\": \"<integer>\"\n  }\n}"
										}
									]
								}
							]
						},
						{
							"name": "status",
							"item": [
								{
									"name": "Get recording status",
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/__admin/recordings/status",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"__admin",
												"recordings",
												"status"
											]
										}
									},
									"response": [
										{
											"name": "Successfully got the record status",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/__admin/recordings/status",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"__admin",
														"recordings",
														"status"
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"status\": \"Stopped\"\n}"
										}
									]
								}
							]
						},
						{
							"name": "snapshot",
							"item": [
								{
									"name": "Take a snapshot recording",
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"captureHeaders\": {\n    \"ut_38c\": {\n      \"caseInsensitive\": \"<boolean>\"\n    }\n  },\n  \"extractBodyCriteria\": {\n    \"binarySizeThreshold\": \"0\",\n    \"textSizeThreshold\": \"0\"\n  },\n  \"persist\": true,\n  \"repeatsAsScenarios\": true,\n  \"requestBodyPattern\": {\n    \"caseInsensitive\": false,\n    \"ignoreArrayOrder\": true,\n    \"ignoreExtraElements\": true,\n    \"matcher\": \"auto\"\n  },\n  \"transformerParameters\": {},\n  \"transformers\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"filters\": {\n    \"ids\": [\n      \"<string>\",\n      \"<string>\"\n    ],\n    \"scheme\": \"http\",\n    \"host\": \"<string>\",\n    \"port\": \"<integer>\",\n    \"method\": \"BQA\",\n    \"url\": \"<string>\",\n    \"urlPath\": \"<string>\",\n    \"urlPathPattern\": \"<string>\",\n    \"urlPattern\": \"<string>\",\n    \"pathParameters\": {\n      \"ad_c5_\": {\n        \"equalTo\": \"<string>\",\n        \"caseInsensitive\": \"<boolean>\"\n      }\n    },\n    \"queryParameters\": {\n      \"aute_0\": {\n        \"equalTo\": \"<string>\",\n        \"caseInsensitive\": \"<boolean>\"\n      },\n      \"cillum_c73\": {\n        \"equalTo\": \"<string>\",\n        \"caseInsensitive\": \"<boolean>\"\n      }\n    },\n    \"formParameters\": {\n      \"esse_4\": {\n        \"equalTo\": \"<string>\",\n        \"caseInsensitive\": \"<boolean>\"\n      },\n      \"commododb\": {\n        \"equalTo\": \"<string>\",\n        \"caseInsensitive\": \"<boolean>\"\n      }\n    },\n    \"headers\": {\n      \"ut_11\": {\n        \"equalTo\": \"<string>\",\n        \"caseInsensitive\": \"<boolean>\"\n      },\n      \"Excepteure\": {\n        \"equalTo\": \"<string>\",\n        \"caseInsensitive\": \"<boolean>\"\n      },\n      \"in_d\": {\n        \"equalTo\": \"<string>\",\n        \"caseInsensitive\": \"<boolean>\"\n      }\n    },\n    \"basicAuthCredentials\": {\n      \"username\": \"<string>\",\n      \"password\": \"<string>\"\n    },\n    \"cookies\": {\n      \"dolore_bb5\": {\n        \"equalTo\": \"<string>\",\n        \"caseInsensitive\": \"<boolean>\"\n      }\n    },\n    \"bodyPatterns\": [\n      {\n        \"equalTo\": \"<string>\",\n        \"caseInsensitive\": \"<boolean>\"\n      },\n      {\n        \"equalTo\": \"<string>\",\n        \"caseInsensitive\": \"<boolean>\"\n      }\n    ],\n    \"customMatcher\": {\n      \"name\": \"<string>\",\n      \"parameters\": {}\n    },\n    \"multipartPatterns\": [\n      {\n        \"name\": \"<string>\",\n        \"matchingType\": \"ANY\",\n        \"headers\": {\n          \"proidentab9\": {\n            \"equalTo\": \"<string>\",\n            \"caseInsensitive\": \"<boolean>\"\n          }\n        },\n        \"bodyPatterns\": [\n          {\n            \"equalTo\": \"<string>\",\n            \"caseInsensitive\": \"<boolean>\"\n          },\n          {\n            \"equalTo\": \"<string>\",\n            \"caseInsensitive\": \"<boolean>\"\n          }\n        ]\n      },\n      {\n        \"name\": \"<string>\",\n        \"matchingType\": \"ANY\",\n        \"headers\": {\n          \"cillum54\": {\n            \"equalTo\": \"<string>\",\n            \"caseInsensitive\": \"<boolean>\"\n          }\n        },\n        \"bodyPatterns\": [\n          {\n            \"equalTo\": \"<string>\",\n            \"caseInsensitive\": \"<boolean>\"\n          },\n          {\n            \"equalTo\": \"<string>\",\n            \"caseInsensitive\": \"<boolean>\"\n          }\n        ]\n      }\n    ]\n  }\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/__admin/recordings/snapshot",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"__admin",
												"recordings",
												"snapshot"
											]
										}
									},
									"response": [
										{
											"name": "Successfully took a snapshot recording",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"captureHeaders\": {\n    \"ut_38c\": {\n      \"caseInsensitive\": \"<boolean>\"\n    }\n  },\n  \"extractBodyCriteria\": {\n    \"binarySizeThreshold\": \"0\",\n    \"textSizeThreshold\": \"0\"\n  },\n  \"persist\": true,\n  \"repeatsAsScenarios\": true,\n  \"requestBodyPattern\": {\n    \"caseInsensitive\": false,\n    \"ignoreArrayOrder\": true,\n    \"ignoreExtraElements\": true,\n    \"matcher\": \"auto\"\n  },\n  \"transformerParameters\": {},\n  \"transformers\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"filters\": {\n    \"ids\": [\n      \"<string>\",\n      \"<string>\"\n    ],\n    \"scheme\": \"http\",\n    \"host\": \"<string>\",\n    \"port\": \"<integer>\",\n    \"method\": \"BQA\",\n    \"url\": \"<string>\",\n    \"urlPath\": \"<string>\",\n    \"urlPathPattern\": \"<string>\",\n    \"urlPattern\": \"<string>\",\n    \"pathParameters\": {\n      \"ad_c5_\": {\n        \"equalTo\": \"<string>\",\n        \"caseInsensitive\": \"<boolean>\"\n      }\n    },\n    \"queryParameters\": {\n      \"aute_0\": {\n        \"equalTo\": \"<string>\",\n        \"caseInsensitive\": \"<boolean>\"\n      },\n      \"cillum_c73\": {\n        \"equalTo\": \"<string>\",\n        \"caseInsensitive\": \"<boolean>\"\n      }\n    },\n    \"formParameters\": {\n      \"esse_4\": {\n        \"equalTo\": \"<string>\",\n        \"caseInsensitive\": \"<boolean>\"\n      },\n      \"commododb\": {\n        \"equalTo\": \"<string>\",\n        \"caseInsensitive\": \"<boolean>\"\n      }\n    },\n    \"headers\": {\n      \"ut_11\": {\n        \"equalTo\": \"<string>\",\n        \"caseInsensitive\": \"<boolean>\"\n      },\n      \"Excepteure\": {\n        \"equalTo\": \"<string>\",\n        \"caseInsensitive\": \"<boolean>\"\n      },\n      \"in_d\": {\n        \"equalTo\": \"<string>\",\n        \"caseInsensitive\": \"<boolean>\"\n      }\n    },\n    \"basicAuthCredentials\": {\n      \"username\": \"<string>\",\n      \"password\": \"<string>\"\n    },\n    \"cookies\": {\n      \"dolore_bb5\": {\n        \"equalTo\": \"<string>\",\n        \"caseInsensitive\": \"<boolean>\"\n      }\n    },\n    \"bodyPatterns\": [\n      {\n        \"equalTo\": \"<string>\",\n        \"caseInsensitive\": \"<boolean>\"\n      },\n      {\n        \"equalTo\": \"<string>\",\n        \"caseInsensitive\": \"<boolean>\"\n      }\n    ],\n    \"customMatcher\": {\n      \"name\": \"<string>\",\n      \"parameters\": {}\n    },\n    \"multipartPatterns\": [\n      {\n        \"name\": \"<string>\",\n        \"matchingType\": \"ANY\",\n        \"headers\": {\n          \"proidentab9\": {\n            \"equalTo\": \"<string>\",\n            \"caseInsensitive\": \"<boolean>\"\n          }\n        },\n        \"bodyPatterns\": [\n          {\n            \"equalTo\": \"<string>\",\n            \"caseInsensitive\": \"<boolean>\"\n          },\n          {\n            \"equalTo\": \"<string>\",\n            \"caseInsensitive\": \"<boolean>\"\n          }\n        ]\n      },\n      {\n        \"name\": \"<string>\",\n        \"matchingType\": \"ANY\",\n        \"headers\": {\n          \"cillum54\": {\n            \"equalTo\": \"<string>\",\n            \"caseInsensitive\": \"<boolean>\"\n          }\n        },\n        \"bodyPatterns\": [\n          {\n            \"equalTo\": \"<string>\",\n            \"caseInsensitive\": \"<boolean>\"\n          },\n          {\n            \"equalTo\": \"<string>\",\n            \"caseInsensitive\": \"<boolean>\"\n          }\n        ]\n      }\n    ]\n  }\n}",
													"options": {
														"raw": {
															"headerFamily": "json",
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/__admin/recordings/snapshot",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"__admin",
														"recordings",
														"snapshot"
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"mappings\": [\n    {\n      \"id\": \"<string>\",\n      \"uuid\": \"<string>\",\n      \"name\": \"<string>\",\n      \"request\": {\n        \"scheme\": \"https\",\n        \"host\": \"<string>\",\n        \"port\": \"<integer>\",\n        \"method\": \"UBIWGISMNV\",\n        \"url\": \"<string>\",\n        \"urlPath\": \"<string>\",\n        \"urlPathPattern\": \"<string>\",\n        \"urlPattern\": \"<string>\",\n        \"pathParameters\": {\n          \"non_9_f\": {\n            \"equalTo\": \"<string>\",\n            \"caseInsensitive\": \"<boolean>\"\n          },\n          \"officia_6\": {\n            \"equalTo\": \"<string>\",\n            \"caseInsensitive\": \"<boolean>\"\n          }\n        },\n        \"queryParameters\": {\n          \"cupidatat5_\": {\n            \"equalTo\": \"<string>\",\n            \"caseInsensitive\": \"<boolean>\"\n          }\n        },\n        \"formParameters\": {\n          \"Duis9\": {\n            \"equalTo\": \"<string>\",\n            \"caseInsensitive\": \"<boolean>\"\n          },\n          \"Ut4\": {\n            \"equalTo\": \"<string>\",\n            \"caseInsensitive\": \"<boolean>\"\n          },\n          \"nostrud_3\": {\n            \"equalTo\": \"<string>\",\n            \"caseInsensitive\": \"<boolean>\"\n          }\n        },\n        \"headers\": {\n          \"in__f\": {\n            \"equalTo\": \"<string>\",\n            \"caseInsensitive\": \"<boolean>\"\n          },\n          \"anim_9\": {\n            \"equalTo\": \"<string>\",\n            \"caseInsensitive\": \"<boolean>\"\n          }\n        },\n        \"basicAuthCredentials\": {\n          \"username\": \"<string>\",\n          \"password\": \"<string>\"\n        },\n        \"cookies\": {\n          \"sed_da\": {\n            \"equalTo\": \"<string>\",\n            \"caseInsensitive\": \"<boolean>\"\n          },\n          \"sit95\": {\n            \"equalTo\": \"<string>\",\n            \"caseInsensitive\": \"<boolean>\"\n          },\n          \"ea_9b\": {\n            \"equalTo\": \"<string>\",\n            \"caseInsensitive\": \"<boolean>\"\n          }\n        },\n        \"bodyPatterns\": [\n          {\n            \"equalTo\": \"<string>\",\n            \"caseInsensitive\": \"<boolean>\"\n          },\n          {\n            \"equalTo\": \"<string>\",\n            \"caseInsensitive\": \"<boolean>\"\n          }\n        ],\n        \"customMatcher\": {\n          \"name\": \"<string>\",\n          \"parameters\": {}\n        },\n        \"multipartPatterns\": [\n          {\n            \"name\": \"<string>\",\n            \"matchingType\": \"ANY\",\n            \"headers\": {\n              \"Duis_2\": {\n                \"equalTo\": \"<string>\",\n                \"caseInsensitive\": \"<boolean>\"\n              },\n              \"commodo7\": {\n                \"equalTo\": \"<string>\",\n                \"caseInsensitive\": \"<boolean>\"\n              }\n            },\n            \"bodyPatterns\": [\n              {\n                \"equalTo\": \"<string>\",\n                \"caseInsensitive\": \"<boolean>\"\n              },\n              {\n                \"equalTo\": \"<string>\",\n                \"caseInsensitive\": \"<boolean>\"\n              }\n            ]\n          },\n          {\n            \"name\": \"<string>\",\n            \"matchingType\": \"ANY\",\n            \"headers\": {\n              \"in12f\": {\n                \"equalTo\": \"<string>\",\n                \"caseInsensitive\": \"<boolean>\"\n              }\n            },\n            \"bodyPatterns\": [\n              {\n                \"equalTo\": \"<string>\",\n                \"caseInsensitive\": \"<boolean>\"\n              },\n              {\n                \"equalTo\": \"<string>\",\n                \"caseInsensitive\": \"<boolean>\"\n              }\n            ]\n          }\n        ]\n      },\n      \"response\": {\n        \"status\": \"<integer>\",\n        \"statusMessage\": \"<string>\",\n        \"headers\": {\n          \"irureba1\": \"<string>\",\n          \"adipisicing__8_\": \"<string>\"\n        },\n        \"additionalProxyRequestHeaders\": {\n          \"deserunt_d4\": \"<string>\",\n          \"sunta\": \"<string>\",\n          \"dolor_89\": \"<string>\"\n        },\n        \"removeProxyRequestHeaders\": [\n          \"<string>\",\n          \"<string>\"\n        ],\n        \"body\": \"<string>\",\n        \"base64Body\": \"80UqT+e5LJ==\",\n        \"jsonBody\": {},\n        \"bodyFileName\": \"<string>\",\n        \"fault\": \"RANDOM_DATA_THEN_CLOSE\",\n        \"fixedDelayMilliseconds\": \"<integer>\",\n        \"delayDistribution\": {\n          \"median\": \"<integer>\",\n          \"sigma\": \"<number>\",\n          \"type\": \"lognormal\"\n        },\n        \"chunkedDribbleDelay\": {\n          \"numberOfChunks\": \"<integer>\",\n          \"totalDuration\": \"<integer>\"\n        },\n        \"fromConfiguredStub\": \"<boolean>\",\n        \"proxyBaseUrl\": \"<string>\",\n        \"proxyUrlPrefixToRemove\": \"<string>\",\n        \"transformerParameters\": {},\n        \"transformers\": [\n          \"<string>\",\n          \"<string>\"\n        ]\n      },\n      \"persistent\": \"<boolean>\",\n      \"priority\": \"<integer>\",\n      \"scenarioName\": \"<string>\",\n      \"requiredScenarioState\": \"<string>\",\n      \"newScenarioState\": \"<string>\",\n      \"postServeActions\": {},\n      \"serveEventListeners\": [\n        {\n          \"name\": \"<string>\",\n          \"requestPhases\": [\n            \"AFTER_COMPLETE\",\n            \"BEFORE_MATCH\"\n          ],\n          \"parameters\": {}\n        },\n        {\n          \"name\": \"<string>\",\n          \"requestPhases\": [\n            \"BEFORE_RESPONSE_SENT\",\n            \"BEFORE_MATCH\"\n          ],\n          \"parameters\": {}\n        }\n      ],\n      \"metadata\": {}\n    },\n    {\n      \"id\": \"<string>\",\n      \"uuid\": \"<string>\",\n      \"name\": \"<string>\",\n      \"request\": {\n        \"scheme\": \"http\",\n        \"host\": \"<string>\",\n        \"port\": \"<integer>\",\n        \"method\": \"YKMWL\",\n        \"url\": \"<string>\",\n        \"urlPath\": \"<string>\",\n        \"urlPathPattern\": \"<string>\",\n        \"urlPattern\": \"<string>\",\n        \"pathParameters\": {\n          \"sed_ef\": {\n            \"equalTo\": \"<string>\",\n            \"caseInsensitive\": \"<boolean>\"\n          },\n          \"aute_c07\": {\n            \"equalTo\": \"<string>\",\n            \"caseInsensitive\": \"<boolean>\"\n          }\n        },\n        \"queryParameters\": {\n          \"ex3\": {\n            \"equalTo\": \"<string>\",\n            \"caseInsensitive\": \"<boolean>\"\n          },\n          \"pariaturd99\": {\n            \"equalTo\": \"<string>\",\n            \"caseInsensitive\": \"<boolean>\"\n          }\n        },\n        \"formParameters\": {\n          \"amet_97\": {\n            \"equalTo\": \"<string>\",\n            \"caseInsensitive\": \"<boolean>\"\n          },\n          \"magna9\": {\n            \"equalTo\": \"<string>\",\n            \"caseInsensitive\": \"<boolean>\"\n          },\n          \"velit_884\": {\n            \"equalTo\": \"<string>\",\n            \"caseInsensitive\": \"<boolean>\"\n          },\n          \"veniam_6\": {\n            \"equalTo\": \"<string>\",\n            \"caseInsensitive\": \"<boolean>\"\n          }\n        },\n        \"headers\": {\n          \"uta\": {\n            \"equalTo\": \"<string>\",\n            \"caseInsensitive\": \"<boolean>\"\n          },\n          \"consectetur_9\": {\n            \"equalTo\": \"<string>\",\n            \"caseInsensitive\": \"<boolean>\"\n          },\n          \"in1ab\": {\n            \"equalTo\": \"<string>\",\n            \"caseInsensitive\": \"<boolean>\"\n          },\n          \"nisi_4\": {\n            \"equalTo\": \"<string>\",\n            \"caseInsensitive\": \"<boolean>\"\n          }\n        },\n        \"basicAuthCredentials\": {\n          \"username\": \"<string>\",\n          \"password\": \"<string>\"\n        },\n        \"cookies\": {\n          \"ullamco_d\": {\n            \"equalTo\": \"<string>\",\n            \"caseInsensitive\": \"<boolean>\"\n          }\n        },\n        \"bodyPatterns\": [\n          {\n            \"equalTo\": \"<string>\",\n            \"caseInsensitive\": \"<boolean>\"\n          },\n          {\n            \"equalTo\": \"<string>\",\n            \"caseInsensitive\": \"<boolean>\"\n          }\n        ],\n        \"customMatcher\": {\n          \"name\": \"<string>\",\n          \"parameters\": {}\n        },\n        \"multipartPatterns\": [\n          {\n            \"name\": \"<string>\",\n            \"matchingType\": \"ANY\",\n            \"headers\": {\n              \"mollitba\": {\n                \"equalTo\": \"<string>\",\n                \"caseInsensitive\": \"<boolean>\"\n              }\n            },\n            \"bodyPatterns\": [\n              {\n                \"equalTo\": \"<string>\",\n                \"caseInsensitive\": \"<boolean>\"\n              },\n              {\n                \"equalTo\": \"<string>\",\n                \"caseInsensitive\": \"<boolean>\"\n              }\n            ]\n          },\n          {\n            \"name\": \"<string>\",\n            \"matchingType\": \"ANY\",\n            \"headers\": {\n              \"dolor_73\": {\n                \"equalTo\": \"<string>\",\n                \"caseInsensitive\": \"<boolean>\"\n              },\n              \"velit_6f_\": {\n                \"equalTo\": \"<string>\",\n                \"caseInsensitive\": \"<boolean>\"\n              }\n            },\n            \"bodyPatterns\": [\n              {\n                \"equalTo\": \"<string>\",\n                \"caseInsensitive\": \"<boolean>\"\n              },\n              {\n                \"equalTo\": \"<string>\",\n                \"caseInsensitive\": \"<boolean>\"\n              }\n            ]\n          }\n        ]\n      },\n      \"response\": {\n        \"status\": \"<integer>\",\n        \"statusMessage\": \"<string>\",\n        \"headers\": {\n          \"cillum_3f\": \"<string>\"\n        },\n        \"additionalProxyRequestHeaders\": {\n          \"et2f1\": \"<string>\"\n        },\n        \"removeProxyRequestHeaders\": [\n          \"<string>\",\n          \"<string>\"\n        ],\n        \"body\": \"<string>\",\n        \"base64Body\": \"p0zaShhaVf==\",\n        \"jsonBody\": {},\n        \"bodyFileName\": \"<string>\",\n        \"fault\": \"RANDOM_DATA_THEN_CLOSE\",\n        \"fixedDelayMilliseconds\": \"<integer>\",\n        \"delayDistribution\": {\n          \"median\": \"<integer>\",\n          \"sigma\": \"<number>\",\n          \"type\": \"lognormal\"\n        },\n        \"chunkedDribbleDelay\": {\n          \"numberOfChunks\": \"<integer>\",\n          \"totalDuration\": \"<integer>\"\n        },\n        \"fromConfiguredStub\": \"<boolean>\",\n        \"proxyBaseUrl\": \"<string>\",\n        \"proxyUrlPrefixToRemove\": \"<string>\",\n        \"transformerParameters\": {},\n        \"transformers\": [\n          \"<string>\",\n          \"<string>\"\n        ]\n      },\n      \"persistent\": \"<boolean>\",\n      \"priority\": \"<integer>\",\n      \"scenarioName\": \"<string>\",\n      \"requiredScenarioState\": \"<string>\",\n      \"newScenarioState\": \"<string>\",\n      \"postServeActions\": {},\n      \"serveEventListeners\": [\n        {\n          \"name\": \"<string>\",\n          \"requestPhases\": [\n            \"BEFORE_RESPONSE_SENT\",\n            \"BEFORE_MATCH\"\n          ],\n          \"parameters\": {}\n        },\n        {\n          \"name\": \"<string>\",\n          \"requestPhases\": [\n            \"AFTER_MATCH\",\n            \"AFTER_MATCH\"\n          ],\n          \"parameters\": {}\n        }\n      ],\n      \"metadata\": {}\n    }\n  ],\n  \"meta\": {\n    \"total\": \"<integer>\"\n  }\n}"
										}
									]
								}
							]
						}
					]
				},
				{
					"name": "scenarios",
					"item": [
						{
							"name": "reset",
							"item": [
								{
									"name": "Reset the state of all scenarios",
									"request": {
										"method": "POST",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/__admin/scenarios/reset",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"__admin",
												"scenarios",
												"reset"
											]
										}
									},
									"response": [
										{
											"name": "Successfully reset",
											"originalRequest": {
												"method": "POST",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/__admin/scenarios/reset",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"__admin",
														"scenarios",
														"reset"
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "text",
											"header": [],
											"cookie": [],
											"body": ""
										}
									]
								}
							]
						},
						{
							"name": "Get all scenarios",
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/__admin/scenarios",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"__admin",
										"scenarios"
									]
								}
							},
							"response": [
								{
									"name": "All scenarios",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/__admin/scenarios",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"__admin",
												"scenarios"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"scenarios\": [\n    {\n      \"id\": \"<string>\",\n      \"name\": \"<string>\",\n      \"possibleStates\": [\n        \"Started\",\n        \"Started\"\n      ],\n      \"state\": \"Started\"\n    },\n    {\n      \"id\": \"<string>\",\n      \"name\": \"<string>\",\n      \"possibleStates\": [\n        \"Started\",\n        \"Started\"\n      ],\n      \"state\": \"Started\"\n    }\n  ]\n}"
								}
							]
						}
					]
				},
				{
					"name": "files",
					"item": [
						{
							"name": "{fileId}",
							"item": [
								{
									"name": "Get file by ID",
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/__admin/files/:fileId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"__admin",
												"files",
												":fileId"
											],
											"variable": [
												{
													"key": "fileId",
													"value": "<string>",
													"description": "(Required) The name of the file"
												}
											]
										}
									},
									"response": [
										{
											"name": "The contents of the file",
											"originalRequest": {
												"method": "GET",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/__admin/files/:fileId",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"__admin",
														"files",
														":fileId"
													],
													"variable": [
														{
															"key": "fileId"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "text",
											"header": [],
											"cookie": [],
											"body": ""
										},
										{
											"name": "File not found",
											"originalRequest": {
												"method": "GET",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/__admin/files/:fileId",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"__admin",
														"files",
														":fileId"
													],
													"variable": [
														{
															"key": "fileId"
														}
													]
												}
											},
											"status": "Not Found",
											"code": 404,
											"_postman_previewlanguage": "text",
											"header": [],
											"cookie": [],
											"body": ""
										}
									]
								},
								{
									"name": "Update or create a file",
									"request": {
										"method": "PUT",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/octet-stream"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "<string>"
										},
										"url": {
											"raw": "{{baseUrl}}/__admin/files/:fileId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"__admin",
												"files",
												":fileId"
											],
											"variable": [
												{
													"key": "fileId",
													"value": "<string>",
													"description": "(Required) The name of the file"
												}
											]
										}
									},
									"response": [
										{
											"name": "OK - contents of the request body as a string",
											"originalRequest": {
												"method": "PUT",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/octet-stream"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "<string>"
												},
												"url": {
													"raw": "{{baseUrl}}/__admin/files/:fileId",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"__admin",
														"files",
														":fileId"
													],
													"variable": [
														{
															"key": "fileId"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "text",
											"header": [],
											"cookie": [],
											"body": ""
										}
									]
								},
								{
									"name": "Delete a file if it exists",
									"request": {
										"method": "DELETE",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/__admin/files/:fileId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"__admin",
												"files",
												":fileId"
											],
											"variable": [
												{
													"key": "fileId",
													"value": "<string>",
													"description": "(Required) The name of the file"
												}
											]
										}
									},
									"response": [
										{
											"name": "OK",
											"originalRequest": {
												"method": "DELETE",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/__admin/files/:fileId",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"__admin",
														"files",
														":fileId"
													],
													"variable": [
														{
															"key": "fileId"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "text",
											"header": [],
											"cookie": [],
											"body": ""
										}
									]
								}
							]
						},
						{
							"name": "Get all file names",
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/__admin/files",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"__admin",
										"files"
									]
								}
							},
							"response": [
								{
									"name": "All scenarios",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/__admin/files",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"__admin",
												"files"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "[\n  \"<string>\",\n  \"<string>\"\n]"
								}
							]
						}
					]
				},
				{
					"name": "settings",
					"item": [
						{
							"name": "Update global settings",
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"median\": \"<integer>\",\n  \"sigma\": \"<number>\",\n  \"type\": \"lognormal\",\n  \"fixedDelay\": \"<number>\"\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/__admin/settings",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"__admin",
										"settings"
									]
								}
							},
							"response": [
								{
									"name": "Settings successfully updated",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"median\": \"<integer>\",\n  \"sigma\": \"<number>\",\n  \"type\": \"lognormal\",\n  \"fixedDelay\": \"<number>\"\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/__admin/settings",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"__admin",
												"settings"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "text",
									"header": [],
									"cookie": [],
									"body": ""
								}
							]
						}
					]
				},
				{
					"name": "reset",
					"item": [
						{
							"name": "Reset mappings and request journal",
							"request": {
								"method": "POST",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/__admin/reset",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"__admin",
										"reset"
									]
								},
								"description": "Reset mappings to the default state and reset the request journal"
							},
							"response": [
								{
									"name": "Successfully reset",
									"originalRequest": {
										"method": "POST",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/__admin/reset",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"__admin",
												"reset"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "text",
									"header": [],
									"cookie": [],
									"body": ""
								}
							]
						}
					]
				},
				{
					"name": "shutdown",
					"item": [
						{
							"name": "Shutdown the WireMock server",
							"request": {
								"method": "POST",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/__admin/shutdown",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"__admin",
										"shutdown"
									]
								},
								"description": "Shutdown the WireMock server"
							},
							"response": [
								{
									"name": "Server will be shut down",
									"originalRequest": {
										"method": "POST",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/__admin/shutdown",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"__admin",
												"shutdown"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "text",
									"header": [],
									"cookie": [],
									"body": ""
								}
							]
						}
					]
				},
				{
					"name": "version",
					"item": [
						{
							"name": "Return the version of the WireMock server",
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/__admin/version",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"__admin",
										"version"
									]
								},
								"description": "Returns the version of the WireMock server"
							},
							"response": [
								{
									"name": "Successfully returned the version of the WireMock server",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/__admin/version",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"__admin",
												"version"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"version\": \"<string>\"\n}"
								}
							]
						}
					]
				},
				{
					"name": "health",
					"item": [
						{
							"name": "Return the health of the WireMock server",
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/__admin/health",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"__admin",
										"health"
									]
								},
								"description": "Returns the health of the WireMock server"
							},
							"response": [
								{
									"name": "Successful health and uptime data",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/__admin/health",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"__admin",
												"health"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"status\": \"unhealthy\",\n  \"message\": \"<string>\",\n  \"version\": \"<string>\",\n  \"uptimeInSeconds\": \"<integer>\",\n  \"timestamp\": \"<string>\"\n}"
								}
							]
						}
					]
				}
			]
		},
		{
			"name": " LBC",
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "accept",
						"value": "*/*"
					},
					{
						"key": "Content-Type",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{   \"instanciaAntigua\": 8122820,   \"instanciaNueva\": 8288020 }",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": ""
				},
				"description": "Generated from cURL: curl -X 'POST' \\   'https://desarrollo.lbc.bo/lbc/servicios/apiemisiondigitalbsol/api/V2/SolicitaSeguro' \\   -H 'accept: */*' \\   -H 'Content-Type: application/json' \\   -d '{   \"instanciaAntigua\": 8122820,   \"instanciaNueva\": 8288020 }'"
			},
			"response": []
		}
	],
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"type": "text/javascript",
				"packages": {},
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"type": "text/javascript",
				"packages": {},
				"exec": [
					""
				]
			}
		}
	],
	"variable": [
		{
			"key": "baseUrl",
			"value": "https://cd-wiremock-dev.bsol.com.bo"
		}
	]
}